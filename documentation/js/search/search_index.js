var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["1d","access","acknowledg","activ","add","addit","allow","api","app.modul","app.module.t","applic","application'","appmodul","argument","assign","assum","async","auth","auth/forgot","auth/login","auth/reset","auth/signup","authent","author","await","base","check","class","collect","commun","comprehens","configmodul","configmodule.forroot","configur","connect","const","constructor(priv","content","contribut","contributor","control","creat","createuser(createuserdto","createuserdto","creation","data","databas","databasemodul","databasemodule.forroot","datasourc","db","deactiv","deactivateuser(id","decor","defin","delet","deleteuser(id","depend","design","detail","document","each","email","enabl","endpoint","enforc","ensur","etc","exampl","excel","exist","expir","expiresin","explan","export","extend","featur","feel","find","finduserbyemail(email","fine","follow","forroot","framework","fredrick","free","full","function","gate","gener","getprivatedata","getus","getuserbyid(id","github","grain","guard","handl","help","here","here'","here})export","id","implement","import","improv","includ","index","inform","initi","instal","integr","interact","isglob","issu","json","jwt","jwtauthguard","key","let'","librari","library'","licens","list","login","look","mailmodul","mailservic","main","maintain","manag","match","messag","method","mit","model","modul","more","multipl","necessari","need","nestj","nestjs/common';import","nestjs/config';@modul","new","npm","number","open","oper","option","oryarn","out","over","password","password/:token","permiss","permissions('permiss","permissions('read","post","prisma","prismacli","prismaservic","privat","privatecontrol","process","process.env.database_url","process.env.jwt_expires_in","process.env.jwt_secret","profil","project","provid","pull","question","rbac","reach","reactiv","reactivateuser(id","readm","readonli","receiv","refer","regist","repositori","request","requir","reset","resourc","result","return","reusabl","robust","role","roles('rol","root","rout","seamlessli","secret","secur","secureauthmodul","secureauthmodule.forroot","secureauthservic","secureg","securegatemodul","securegates';@controller('private')@roles('admin')export","securegates';@controller('private')export","securegates';@controller('users')export","securegates';@modul","securegates';import","securerbacmodul","securerbacmodule],})export","securerbacservic","secureusermodul","secureusermodule],})export","secureuserservic","send","servic","signup","simplifi","softwar","sourc","specifi","step","string","such","suggest","support","tabl","task","this.userservice.getus","token","true","under","updat","updateuser(id","updateuserdto","url","us","usag","useguard","useguards(jwtauthguard","user","user'","userscontrol","userservic","valid","via","web","welcom","yalley","yarn"],"overview.html":["11","7","browser","class","inject","interfac","match","out","overview","reset","result","support","svg","zoom"],"modules.html":["match","modul","result"],"injectables/AuthMiddleware.html":["accesstoken","actual","app/callback","async","attach","authent","authmiddlewar","authorizationurl","authservic","await","callback","callbackurl","catch","chain","class","client","clientid","clientsecret","const","constructor","constructor(authservic","constructor(priv","continu","creat","custom","defin","descript","done","done(err","done(new","done(nul","err","export","express","extractjwt","extractjwt.fromauthheaderasbearertoken","fals","fetch","file","found","found/creat","function","handl","httpexcept","https://example.com/oauth2/author","https://example.com/oauth2/token","https://your","id","implement","import","info","inject","instanc","jwt","jwtfromrequest","jwtoption","jwtstrategi","jwtstrategy(jwtopt","key","logic","match","method","middlewar","name","nestjs/common","nestmiddlewar","new","next","next(err","next(new","nextfunct","oauth","oauth2","oauth2strategi","object","option","param","paramet","passport","passport.authent","passport.authenticate('jwt","passport.us","payload","process","process.env.jwt_secret","process.env.oauth_client_id","process.env.oauth_client_secret","profil","re","readonli","refreshtoken","replac","req","req.us","request","respons","result","return","secret","secretorkey","secureauthservic","services/auth.servic","session","sourc","src/auth/middleware/auth.middleware.t","strategi","this.authservice.findorcreateuserfromoauthprofile(profil","this.authservice.validatetokenpayload(payload","token","tokenurl","tri","trigger","unauthorizedexcept","unauthorizedexception('invalid","unauthorizedexception('unauthor","url","us","use(req","user","valid","void"],"injectables/JwtAuthGuard.html":["access","add","assum","async","authent","authguard","authguard('jwt","author","await","base","boolean","canactiv","canactivate(context","check","class","const","constructor","constructor(priv","constructor(reflector","contain","context","context.gethandl","context.switchtohttp().getrequest","control","current","custom","default","descript","determin","executioncontext","export","extend","extract","fals","file","handler","hasrol","import","indic","info","inject","jwt","jwtauthguard","match","metadata","method","nestj","nestjs.thi","nestjs/common","nestjs/cor","nestjs/passport","new","object","observ","param","paramet","privat","promis","properti","provid","rbac","rbac/service/rbac.servic","rbacservic","readonli","reflector","repres","request","request.us","requir","requiredrol","resourc","result","retriev","return","role","roles.some((rol","rout","run","rxj","securerbacservic","sourc","src/auth/guards/jwt.guard.t","super","super.canactivate(context","this.rbacservice.hasroles(user.id","this.reflector.get('rol","throw","true","unauthorizedexcept","unauthorizedexception('y","us","user","user'","user.roles.includes(rol"],"injectables/JwtStrategy.html":["associ","async","authent","authservic","base","call","class","config","config.get('jwt_secret","configservic","constructor","constructor(authservic","constructor(priv","creat","decod","descript","export","extend","extractjwt","extractjwt.fromauthheaderasbearertoken","file","handl","import","info","inject","instanc","jwt","jwtfromrequest","jwtstrategi","key","match","method","nestjs/common","nestjs/config","nestjs/passport","param","paramet","passport","passportstrategi","passportstrategy(strategi","payload","promis","readonli","result","retriev","return","secret","secretorkey","secureauthservic","services/auth.servic","sourc","src/auth/strategies/jwt.strategy.t","strategi","super","this.authservice.validatetokenpayload(payload","token","us","user","valid","validate(payload","validatetokenpayload"],"injectables/MailService.html":["address","async","asynchron","await","class","configur","constructor","constructor(mailerservic","constructor(priv","context","creat","data","descript","email","export","file","function","import","info","inject","instanc","mailerservic","mailservic","match","method","modules/mail","name","nestj","nestjs/common","object","option","param","paramet","promis","readonli","recipi","recipient'","resolv","respons","result","return","send","sendemail","sendemail(to","sent","servic","sourc","specifi","src/auth/mailer/mail.service.t","string","subject","templat","this.mailerservice.sendmail","us"],"injectables/OAuthStrategy.html":["access","accesstoken","app.com/auth/callback","associ","async","authent","authorizationurl","authservic","base","call","callbackurl","class","client","clientid","clientsecret","constructor","constructor(authservic","constructor(priv","creat","descript","export","extend","file","findorcreateuserfromoauthprofil","handl","http://your","https://oauth","id","import","info","inject","instanc","match","method","methodof","nestjs/common","nestjs/passport","oauth","oauth2","oauthstrategi","obtain","param","paramet","passport","passportstrategi","passportstrategy(strategi","prisma/cli","profil","promis","provid","provider.com/auth","provider.com/token","readonli","receiv","refresh","refreshtoken","result","return","secret","secureauthservic","services/auth.servic","sourc","src/auth/strategies/oauth.strategy.t","strategi","string","super","this.authservice.findorcreateuserfromoauthprofile(profil","token","tokenurl","us","user","valid","validate(accesstoken"],"injectables/PrismaService.html":["access","applic","async","await","class","configur","connect","constructor","constructor(opt","creat","databas","descript","disconnect","export","extend","file","function","hook","implement","import","info","inject","instanc","lifecycl","match","method","name","nestjs/common","onmoduledestroy","onmoduleinit","option","orm","param","paramet","prisma","prisma.prismaclientopt","prisma/cli","prismacli","prismaservic","promis","provid","result","return","run","servic","shutdown","shutdown.disconnect","sourc","src/auth/prismaservice/prisma.service.t","startup","startup.connect","super(opt","this.$connect","this.$disconnect","void"],"injectables/RbacAuthGuard.html":["access","async","authent","authguard","authguard('jwt","author","await","base","boolean","canactiv","canactivate(context","check","class","const","constructor","constructor(priv","constructor(rbacservic","contain","context","context.gethandl","context.switchtohttp().getrequest","control","creat","custom","descript","execut","executioncontext","export","extend","fals","file","guard","handler","haspermiss","hasrol","import","indic","info","inject","instanc","jwt","jwtauthguard","jwtauthguard.thi","match","metadata","method","nestj","nestjs/common","nestjs/cor","nestjs/passport","new","object","overrid","param","paramet","parent","permiss","prisma/cli","privat","promis","rbac","rbacauthguard","rbacservic","readonli","reflector","request","request.us","requir","requiredpermiss","requiredrol","resourc","respons","result","return","role","rout","route.overrid","run","securerbacservic","servic","service/rbac.servic","sourc","specif","src/rbac/guard/rbac.guard.t","super","super.canactivate(context","this.rbacservice.haspermission(user.id","this.rbacservice.hasroles(user.id","this.reflector.get('permiss","this.reflector.get('rol","throw","true","unauthorizedexcept","unauthorizedexception('y","us","user","whether"],"injectables/SecureAuthService.html":["0","10","500","8","_+{}\\[\\]:;<>,.?~`]/.test(password","abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789","access","access_token","advanc","allow","alreadi","argument","associ","assum","async","auth","authconfigur","authconfigure['emailtransport","authconfigure['forgotpassword","authent","await","base","bcrypt","bcrypt.compare(oldpassword","bcrypt.compare(password","bcrypt.hash(newpassword","bcrypt.hash(password","bodi","boolean","catch(error","certif","chang","charact","check","cipher","class","click","compos","configservic","configur","console.log(this.configservice.get('jwt').secret","const","constructor","constructor(prisma","contain","context","creat","createtransport","criteria","d/.test(password","data","databas","date(expir","date.now","decod","deletedat","descript","email","emailtransporterconfig","error","exampl","exist","existingus","expir","export","fals","file","find","findorcreateuserfromoauthprofil","findorcreateuserfromoauthprofile(profil","flow","follow","forgot","forgotpassword","forgotpassword(email","forgotpasswordconfig","found","function","gener","generaterandomstr","generaterandomstring(length","hashedpassword","haslowercas","hasnumb","hasspecialcharact","hasuppercas","here","host","httpexcept","httpexception(error.messag","id","if(!verifypassword","import","info","initi","inject","instanc","interact","interfaces/auth.interfac","interfaces/user.interfac","invalid","islengthvalid","ispasswordstrong","ispasswordstrong(password","ispasswordvalid","jwt","jwtservic","key","link","login","login(email","mailer/mail.servic","mailservic","match","meet","method","model","name","need","nestjs/common","nestjs/config","nestjs/jwt","new","newli","newpassword","newus","nodemail","nodemailer.createtransport","nodemailer.transport","notfoundexcept","notfoundexception('us","null","number","oauth","oauthprofil","object","occur","oldpassword","onc","option","otherwis","param","paramet","pass","password","password.length","payload","payload.sub","port","primari","prisma","prisma/cli","prismaservic","prismaservice/prisma.servic","privat","profil","profile.id","promis","properti","provid","public","readonli","record","regist","rejectunauthor","relat","requir","reset","resetpassword","resetpassword(userid","resetpasswordexpir","resetpasswordurl","resettoken","resettokenexpir","reseturl","resolv","result","retriev","return","saltround","secret","secur","secureauthservic","self","send","sender","sendresetpasswordemail","sendresetpasswordemail(email","sent","servic","set","sign","signup","signup(email","signup,password","sourc","specifi","src/auth/services/auth.service.t","sslv3","storag","store","storeresettoken","storeresettoken(email","str","strength","string","strong","sub","subject","success","such","temp","templates/reset","temporari","this.configservice.get('emailtransport","this.configservice.get('forgotpassword","this.configservice.get('jwt').secret","this.createtransport","this.emailtransporterconfig","this.forgotpasswordconfig","this.forgotpasswordconfig.resetpasswordexpir","this.forgotpasswordconfig.resetpasswordurl}?token=${resettoken","this.generaterandomstring(32","this.jwtservice.sign(payload","this.mailservice.sendemail(email","this.prisma.user.cr","this.prisma.user.findfirst","this.prisma.user.finduniqu","this.prisma.user.findunique({wher","this.prisma.user.upd","this.sendresetpasswordemail(email","this.storeresettoken(email","this.transport","throw","time","tl","tlsv1","token","tokenpayload","transport","true","type","unauthorizedexcept","unauthorizedexception('invalid","unauthorizedexception('us","unauthorizedexception('usernam","uniqu","updat","updatedus","upon","url","us","user","user'","user.email","user.id","user.password","userid","valid","validatetokenpayload","validatetokenpayload(payload","verifi","verifypassword","z]/.test(password"],"injectables/SecureRbacService.html":["0","400","access","allpermiss","alreadi","array","asignpermissiontorol","asignpermissiontorole(assignpermissiontoroledto","assign","assignpermissiontoroledto","assignroletous","assignroletouser(assignroletous","assignroletouserdto","associ","async","auth/prismaservice/prisma.servic","await","base","chang","check","class","connect","const","constructor","constructor(prisma","constructor(priv","contain","control","creat","createpermiss","createpermission(permissiondto","createrol","createrole(roledto","data","date(date.now","delet","deletedat","deleterol","deleterole(roleid","descript","disconnect","doesn't","dto","dto/permiss","error","exist","export","fals","file","filter((permiss","find","flatmap((rol","for(let","found","getpermiss","getpermissionbyid","getpermissionbyid(id","getpermissionsforus","getpermissionsforuser(userid","getrol","getrolebyid","getrolebyid(roleid","given","handl","haspermiss","haspermission(userid","hasrol","hasroles(userid","httpexcept","httpexception('invalid","httpexception('permiss","httpexception('rol","httpexception('us","httpexception(`permiss","httpexception(`rol","id","if(!rol","if(rol","if(role.deletedat","if(role.nam","import","includ","info","inject","list","match","method","name","nestjs/common","new","notfoundexcept","notfoundexception('permiss","notfoundexception('rol","notfoundexception('us","notfoundexception(`permiss","notfoundexception(`rol","null","number","object","old","oper","otherwis","p.id","param","paramet","permiss","permission.deletedat","permissiondisconnect","permissiondto","permissionid","permissionids.foreach","permissionids.foreach(async","permissionids.includes(permission.id","permissionids.length","permissionids.map((permissionid","permissioninrol","prisma","prisma/cli","prismaservic","promis","provid","rbac","readonli","remov","removepermissionfromrol","removepermissionfromrole(removepermissionfromroledto","removepermissionfromroledto","requir","requiredpermiss","requiredpermissions.includes(permission.nam","requiredrol","requiredroles.includes(roles.nam","resolv","respons","result","retriev","return","revokeroleofus","revokeroleofuser(revokeroleofuserdto","revokeroleofuserdto","role","role.deletedat","role.dto","role.id","role.nam","role.permiss","role.permissions.find((p","roledto","roleid","same","securerbacservic","select","servic","servicesretriev","sourc","specif","specifi","src/rbac/service/rbac.service.t","string","successfulli","this.getpermissionsforuser(userid","this.prisma.permission.cr","this.prisma.permission.findfirst","this.prisma.permission.findfirst({wher","this.prisma.permission.findmani","this.prisma.permission.upd","this.prisma.role.cr","this.prisma.role.findfirst","this.prisma.role.findmani","this.prisma.role.finduniqu","this.prisma.role.upd","this.prisma.role.update({wher","this.prisma.user.findfirst","this.prisma.user.finduniqu","throw","true","undeleterol","undeleterole(roleid","updat","updatedat","updatepermiss","updatepermission(id","updatepermissiondto","updatepermissionstorol","updatepermissionstoroles(updatepermissiontoroledto","updatepermissiontoroledto","updaterol","updaterole(roleid","updateroledto","user","user'","user.rol","user.roles.length","userid","userrol","userwithrol","userwithroles.rol"],"injectables/SecureUserService.html":["10","400","activ","alreadi","async","auth/prismaservice/prisma.servic","await","bcrypt","bcrypt.compare(password","bcrypt.hash(password","class","console.log(id","const","constructor","constructor(prisma","constructor(priv","creat","createus","createuser(createuserdto","createuserdto","createuserdto.email","data","date(date.now","deactiv","deactivateus","deactivateuser(id","delet","deletedat","deleteus","deleteuser(id","dto/user.dto","email","exist","export","file","find","finduserbyemail","finduserbyemail(email","found","getus","getuserbyid","getuserbyid(id","hashpassword","httpexcept","httpexception('invalid","httpexception('password","httpexception('us","id","import","info","inject","invalid","list","match","method","nestjs/common","new","newli","notfoundexcept","notfoundexception('us","null","number","param","paramet","password","previou","prisma","prisma/cli","prismaservic","promis","reactiv","reactivateus","reactivateuser(id","readonli","request","result","retriev","return","saltpound","same","secureuserservic","sourc","src/user/service/user.service.t","string","this.getuserbyid(id","this.prisma.user.cr","this.prisma.user.delet","this.prisma.user.findfirst","this.prisma.user.findmani","this.prisma.user.upd","throw","updat","updateus","updateuser(id","updateuserdto","user","user.deletedat","user.password","verifypassword"],"injectables/ZodValidationPipe.html":["argumentmetadata","badrequestexcept","badrequestexception(`valid","catch","class","constructor","constructor(priv","constructor(schema","error","error.issues[0].messag","export","fail","file","implement","import","info","inject","instanceof","match","messag","metadata","method","nestjs/common","new","pipe.t","pipetransform","result","return","schema","sourc","src/auth/common/zod","this.schema.parse(valu","throw","transform","transform(valu","tri","valid","valu","void","zod","zoderror","zodschema","zodvalidationpip"],"classes/AssignPermissionToRoleDto.html":["1","1,2","apiproperti","assign","assignpermissiontoroledto","assignroletouserdto","class","const","creat","descript","dto","exampl","export","file","id","import","info","isarray","isnotempti","isnumb","isopt","isstr","match","name","nestjs/map","nestjs/swagg","new","number","option","partialtyp","permiss","permissiondto","permissionid","permissionschema","permissiontoroleschema","properti","result","role","role.dto.t","roledto","roleid","roleiddto","roleidschema","roleschema","rolestatusschema","sourc","src/rbac/dto/permiss","string","type","user","userid","valid","write","z","z.array(z.numb","z.number","z.object","z.string().tolowercas","zod"],"classes/AssignRoleToUserDto.html":["1","1,2","apiproperti","assign","assignpermissiontoroledto","assignroletouserdto","class","const","creat","descript","dto","exampl","export","file","id","import","info","isarray","isnotempti","isnumb","isopt","isstr","match","name","nestjs/map","nestjs/swagg","new","number","option","partialtyp","permiss","permissiondto","permissionid","permissionschema","permissiontoroleschema","properti","result","role","role.dto.t","roledto","roleid","roleiddto","roleidschema","roleschema","rolestatusschema","sourc","src/rbac/dto/permiss","string","type","user","userid","valid","write","z","z.array(z.numb","z.number","z.object","z.string().tolowercas","zod"],"classes/CreateUserDto.html":["allow","apiproperti","class","creat","createuserdto","data","descript","email","exampl","export","extend","file","import","info","isemail","isnotempti","isstr","match","minlength","minlength(6","nestjs/map","nestjs/swagg","new","note","object","partial","partialtyp","partialtype(createuserdto","password","password123","properti","result","sourc","src/user/dto/user.dto.t","string","transfer","type","updat","updateuserdto","user","user@example.com","valid","z","zod"],"classes/ForgotPasswordDto.html":["1","apiproperti","class","const","data","descript","dto","email","exampl","export","file","forgotpassworddto","forgotpasswordschema","id","import","info","isemail","isnotempti","isnumb","isstr","johndoe@gmail.com","length","length(6","login","logindto","match","min","nestjs/swagg","new","newpassword","newpassword123","number","object","oldpassword","oldpassword123","password","password123","properti","request","reset","resetpassworddto","resetpasswordschema","result","signup","signupdto","sourc","src/auth/dto/user.dto.t","string","transfer","user","user'","userauthschema","userid","valid","z","z.coerce.string().min(6","z.number().posit","z.object","z.string().email","zod"],"classes/LoginDto.html":["1","apiproperti","class","const","data","descript","dto","email","exampl","export","file","forgotpassworddto","forgotpasswordschema","id","import","info","isemail","isnotempti","isnumb","isstr","johndoe@gmail.com","length","length(6","login","logindto","match","min","nestjs/swagg","new","newpassword","newpassword123","number","object","oldpassword","oldpassword123","password","password123","properti","request","reset","resetpassworddto","resetpasswordschema","result","signup","signupdto","sourc","src/auth/dto/user.dto.t","string","transfer","user","user'","userauthschema","userid","valid","z","z.coerce.string().min(6","z.number().posit","z.object","z.string().email","zod"],"classes/PermissionDto.html":["1","1,2","apiproperti","assign","assignpermissiontoroledto","assignroletouserdto","class","const","creat","descript","dto","exampl","export","file","id","import","info","isarray","isnotempti","isnumb","isopt","isstr","match","name","nestjs/map","nestjs/swagg","new","number","option","partialtyp","permiss","permissiondto","permissionid","permissionschema","permissiontoroleschema","properti","result","role","role.dto.t","roledto","roleid","roleiddto","roleidschema","roleschema","rolestatusschema","sourc","src/rbac/dto/permiss","string","type","user","userid","valid","write","z","z.array(z.numb","z.number","z.object","z.string().tolowercas","zod"],"classes/ResetPasswordDto.html":["1","apiproperti","class","const","data","descript","dto","email","exampl","export","file","forgotpassworddto","forgotpasswordschema","id","import","info","isemail","isnotempti","isnumb","isstr","johndoe@gmail.com","length","length(6","login","logindto","match","min","nestjs/swagg","new","newpassword","newpassword123","number","object","oldpassword","oldpassword123","password","password123","properti","request","reset","resetpassworddto","resetpasswordschema","result","signup","signupdto","sourc","src/auth/dto/user.dto.t","string","transfer","user","user'","userauthschema","userid","valid","z","z.coerce.string().min(6","z.number().posit","z.object","z.string().email","zod"],"classes/RoleDto.html":["1","1,2","apiproperti","assign","assignpermissiontoroledto","assignroletouserdto","class","const","creat","descript","dto","exampl","export","file","id","import","info","isarray","isnotempti","isnumb","isopt","isstr","match","name","nestjs/map","nestjs/swagg","new","number","option","partialtyp","permiss","permissiondto","permissionid","permissionschema","permissiontoroleschema","properti","result","role","role.dto.t","roledto","roleid","roleiddto","roleidschema","roleschema","rolestatusschema","sourc","src/rbac/dto/permiss","string","type","user","userid","valid","write","z","z.array(z.numb","z.number","z.object","z.string().tolowercas","zod"],"classes/RoleIdDto.html":["1","1,2","apiproperti","assign","assignpermissiontoroledto","assignroletouserdto","class","const","creat","descript","dto","exampl","export","file","id","import","info","isarray","isnotempti","isnumb","isopt","isstr","match","name","nestjs/map","nestjs/swagg","new","number","option","partialtyp","permiss","permissiondto","permissionid","permissionschema","permissiontoroleschema","properti","result","role","role.dto.t","roledto","roleid","roleiddto","roleidschema","roleschema","rolestatusschema","sourc","src/rbac/dto/permiss","string","type","user","userid","valid","write","z","z.array(z.numb","z.number","z.object","z.string().tolowercas","zod"],"classes/SignupDto.html":["1","apiproperti","class","const","data","descript","dto","email","exampl","export","file","forgotpassworddto","forgotpasswordschema","id","import","info","isemail","isnotempti","isnumb","isstr","johndoe@gmail.com","length","length(6","login","logindto","match","min","nestjs/swagg","new","newpassword","newpassword123","number","object","oldpassword","oldpassword123","password","password123","properti","request","reset","resetpassworddto","resetpasswordschema","result","signup","signupdto","sourc","src/auth/dto/user.dto.t","string","transfer","user","user'","userauthschema","userid","valid","z","z.coerce.string().min(6","z.number().posit","z.object","z.string().email","zod"],"classes/UpdateUserDto.html":["allow","apiproperti","class","creat","createuserdto","data","descript","email","exampl","export","extend","file","import","info","isemail","isnotempti","isstr","match","minlength","minlength(6","nestjs/map","nestjs/swagg","new","note","object","partial","partialtyp","partialtype(createuserdto","password","password123","properti","result","sourc","src/user/dto/user.dto.t","string","transfer","type","updat","updateuserdto","user","user@example.com","valid","z","zod"],"interfaces/AuthConfig.html":["address","associ","auth","authconfig","authconfigur","authent","boolean","configur","connect","credenti","descript","email","emailtransport","expir","expiresin","export","file","forgot","forgotpassword","function","host","hostnam","id","indic","info","interfac","json","jwt","jwtconfig","key","match","millisecond","need","number","option","pass","password","payload","port","properti","redirect","relat","repres","reset","resetpasswordexpir","resetpasswordurl","result","secret","secur","send","sender","server","sign","sourc","specif","src/auth/interfaces/auth.interface.t","ssl/tl","string","sub","subject","time","token","tokenpayload","transport","type","typic","url","us","user","user'","usernam","verifi","web"],"interfaces/AuthConfigure.html":["address","associ","auth","authconfig","authconfigur","authent","boolean","configur","connect","credenti","descript","email","emailtransport","expir","expiresin","export","file","forgot","forgotpassword","function","host","hostnam","id","indic","info","interfac","json","jwt","jwtconfig","key","match","millisecond","need","number","option","pass","password","payload","port","properti","redirect","relat","repres","reset","resetpasswordexpir","resetpasswordurl","result","secret","secur","send","sender","server","sign","sourc","specif","src/auth/interfaces/auth.interface.t","ssl/tl","str","string","sub","subject","time","token","tokenpayload","transport","type","typic","url","us","user","user'","usernam","verifi","web"],"interfaces/JwtConfig.html":["address","associ","auth","authconfig","authconfigur","authent","boolean","configur","connect","credenti","descript","email","emailtransport","expir","expiresin","export","file","forgot","forgotpassword","function","host","hostnam","id","indic","info","interfac","json","jwt","jwtconfig","key","match","millisecond","need","number","option","pass","password","payload","port","properti","redirect","relat","repres","reset","resetpasswordexpir","resetpasswordurl","result","secret","secur","send","sender","server","sign","sourc","specif","src/auth/interfaces/auth.interface.t","ssl/tl","string","sub","subject","time","token","tokenpayload","transport","type","typic","url","us","user","user'","usernam","verifi","web"],"interfaces/OAuthProfile.html":["add","addit","e.g","email","expect","export","field","file","id","identifi","import","info","interfac","match","need","number","oauth","oauthprofil","password","prisma/cli","properti","provid","provider'","relev","respons","result","role","sourc","src/auth/interfaces/user.interface.t","string","sub","type","uniqu","user"],"interfaces/Permission.html":["add","array","associ","descript","export","file","id","identifi","info","interfac","match","name","need","number","permiss","permission.interface.t","properti","relat","repres","result","role","sourc","src/rbac/interface/rol","string","system","type","uniqu"],"interfaces/Role.html":["add","applic","array","associ","descript","export","file","id","identifi","info","interfac","match","name","need","number","permiss","permission.interface.t","properti","relat","repres","result","role","sourc","src/rbac/interface/rol","string","system","type","uniqu"],"interfaces/TokenPayload.html":["address","associ","auth","authconfig","authconfigur","authent","boolean","configur","connect","credenti","descript","email","emailtransport","expir","expiresin","export","file","forgot","forgotpassword","function","host","hostnam","id","indic","info","interfac","json","jwt","jwtconfig","key","match","millisecond","need","number","option","pass","password","payload","port","properti","redirect","relat","repres","reset","resetpasswordexpir","resetpasswordurl","result","secret","secur","send","sender","server","sign","sourc","specif","src/auth/interfaces/auth.interface.t","ssl/tl","string","sub","subject","time","token","tokenpayload","transport","type","typic","url","us","user","user'","usernam","verifi","web"],"miscellaneous.html":["access","allow","assign","auth","base","control","custom","decor","forgotpasswordschema","handler","match","metadata","miscellan","nestj","nestjs.it","particular","permiss","permissionschema","permissiontoroleschema","rbac","requir","resetpasswordschema","result","role","roleidschema","roleschema","rolestatusschema","rout","set","specifi","us","userauthschema","variabl"],"coverage.html":["0","0/1","0/2","1/1","100","12/14","15/18","2/2","3/3","8/8","83","85","assignpermissiontoroledto","assignroletouserdto","authconfig","authconfigur","authmiddlewar","class","coverag","createuserdto","document","file","forgotpassworddto","identifi","inject","interfac","jwtauthguard","jwtconfig","jwtstrategi","logindto","mailservic","match","oauthprofil","oauthstrategi","permiss","permission.interface.t","permissiondto","pipe.t","prismaservic","project","rbacauthguard","resetpassworddto","result","role","role.dto.t","roledto","roleiddto","secureauthservic","securerbacservic","secureuserservic","signupdto","src/auth/common/zod","src/auth/dto/user.dto.t","src/auth/guards/jwt.guard.t","src/auth/interfaces/auth.interface.t","src/auth/interfaces/user.interface.t","src/auth/mailer/mail.service.t","src/auth/middleware/auth.middleware.t","src/auth/prismaservice/prisma.service.t","src/auth/services/auth.service.t","src/auth/strategies/jwt.strategy.t","src/auth/strategies/oauth.strategy.t","src/rbac/dto/permiss","src/rbac/guard/rbac.guard.t","src/rbac/interface/rol","src/rbac/service/rbac.service.t","src/user/dto/user.dto.t","src/user/service/user.service.t","statement","tokenpayload","type","updateuserdto","valid","zodvalidationpip"]},"length":34},"tokenStore":{"root":{"0":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639},"coverage.html":{"ref":"coverage.html","tf":0.024096385542168676}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012048192771084338}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012048192771084338}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.13855421686746988}}},"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}},"1":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}}},"2":{"docs":{},"/":{"1":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}},"docs":{}},"docs":{}}},"5":{"docs":{},"/":{"1":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}},"docs":{}},"docs":{}}},"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.03319502074688797},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.03319502074688797},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.03319502074688797},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.03319502074688797},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.03319502074688797},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}},",":{"2":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.008298755186721992},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.008298755186721992},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.008298755186721992},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.008298755186721992},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.008298755186721992}}},"docs":{}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.07228915662650602}}},"docs":{}}},"2":{"docs":{},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.05421686746987952}}},"docs":{}}},"3":{"docs":{},"/":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}},"docs":{}}},"4":{"0":{"0":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.007942238267148015},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.011741682974559686}}},"docs":{}},"docs":{}},"5":{"0":{"0":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}},"docs":{}},"docs":{}},"7":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"8":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012048192771084338}}},"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"/":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}},"docs":{}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.015047879616963064},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.02358490566037736},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.03308823529411765},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.005454545454545455},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.004332129963898917},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666}}}}}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.007827788649706457}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}},"d":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.008207934336525308},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.011741682974559686}}}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.008207934336525308}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.03319502074688797},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.03319502074688797},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.03333333333333333},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.04326923076923077},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.04326923076923077},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.03319502074688797},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.04326923076923077},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.03319502074688797},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.03319502074688797},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.04326923076923077},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.03333333333333333}}}}}}}}}}},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.01094391244870041},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.029197080291970802},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205}}}}}}},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.05}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.006498194945848376},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.02666666666666667}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005776173285198556},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.02074688796680498},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.02074688796680498},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.02074688796680498},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.02074688796680498},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.02074688796680498},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005776173285198556},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":5.008298755186722},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005054151624548736},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":5.008298755186722},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.04},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.010273972602739725},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.029197080291970802},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.013636363636363636},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.01516245487364621},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.015655577299412915}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046153846153846156}},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.024623803009575923},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.023972602739726026},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.020833333333333332},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.01838235294117647},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.007272727272727273},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.05235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.0411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.04477611940298507},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.04040404040404041}}}}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.018867924528301886},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":5.017123287671233},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.010273972602739725},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.01875},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.015625}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.018867924528301886},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.014705882352941176}},"(":{"docs":{},"'":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":5.010471204188482},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}},"u":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":5.008230452674897},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}},"e":{"docs":{},"[":{"docs":{},"'":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.011029411764705883},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.013636363636363636},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.023104693140794223},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.03131115459882583}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.010273972602739725}}}}}}},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"h":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"l":{"docs":{},"m":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"q":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"v":{"docs":{},"w":{"docs":{},"x":{"docs":{},"y":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"h":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"l":{"docs":{},"m":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"q":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"v":{"docs":{},"w":{"docs":{},"x":{"docs":{},"y":{"docs":{},"z":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.008181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.004332129963898917},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}}}},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"`":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.01646090534979424},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}}}}}},"d":{"docs":{},"i":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.018867924528301886},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.029411764705882353},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0036101083032490976}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315}}}},"n":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.009575923392612859},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.02358490566037736},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.014705882352941176},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":5.04149377593361},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":5.04149377593361},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":5.055555555555555},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":5.028846153846154},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":5.028846153846154},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":5.04149377593361},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":5.028846153846154},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":5.04149377593361},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":5.04149377593361},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":5.028846153846154},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":5.055555555555555},"coverage.html":{"ref":"coverage.html","tf":0.06626506024096386}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666}},"i":{"docs":{},"d":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},"o":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.025}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.012311901504787962},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.006363636363636364},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.05759162303664921},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.053497942386831275},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.04975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.045454545454545456}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0375},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.00909090909090909}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.010273972602739725},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.02830188679245283},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.025735294117647058},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.02727272727272727},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.027436823104693142},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.025440313111545987},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.02074688796680498},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.02074688796680498},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.014423076923076924},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.014423076923076924},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.02074688796680498},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.014423076923076924},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.02074688796680498},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.02074688796680498},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.014423076923076924}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"x":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.018867924528301886},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.041666666666666664},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.014705882352941176},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.02188782489740082},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046153846153846156}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.006024096385541}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.017123287671232876},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.007272727272727273},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.008664259927797834},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.011741682974559686},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.03319502074688797},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.03319502074688797},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.044444444444444446},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.03319502074688797},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.03319502074688797},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.03319502074688797},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.044444444444444446}},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.015655577299412915},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":5.022222222222222},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.01838235294117647}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.01516245487364621},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.015655577299412915},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.03333333333333333},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.02403846153846154},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.02403846153846154},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.02403846153846154},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.02403846153846154},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.03333333333333333}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.029197080291970802},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.006363636363636364}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.011741682974559686}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046153846153846156}}},"d":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.006498194945848376},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.011741682974559686}},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.023826714801444042},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.01761252446183953}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.03319502074688797},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.03319502074688797},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.03333333333333333},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.04326923076923077},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.04326923076923077},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.03319502074688797},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.04326923076923077},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.03319502074688797},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.03319502074688797},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.04326923076923077},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.03333333333333333},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}},"n":{"docs":{},"e":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}},"u":{"docs":{},"l":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0036101083032490976}}}}}}}}}}},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005776173285198556},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.016597510373443983},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.016597510373443983},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.02403846153846154},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.02403846153846154},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.016597510373443983},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.02403846153846154},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.016597510373443983},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.016597510373443983},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.02403846153846154}},"/":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.09523809523809523},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.05272727272727273},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.03522504892367906},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.044444444444444446},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.07211538461538461},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.07211538461538461},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.07211538461538461},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.07211538461538461},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.044444444444444446},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.05759162303664921},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.053497942386831275},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.05472636815920398},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.0707070707070707}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"t":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.058091286307053944},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.058091286307053944},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.038461538461538464},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.038461538461538464},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.058091286307053944},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.038461538461538464},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.058091286307053944},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.058091286307053944},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.038461538461538464},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.009386281588447653},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.00909090909090909},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.014925373134328358},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.014925373134328358},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.04149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.04149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.03365384615384615},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.03365384615384615},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.04149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.03365384615384615},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.04149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.04149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.03365384615384615},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.020942408376963352},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.01646090534979424},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.01990049751243781},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.027777777777777776},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.02666666666666667},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.020202020202020204}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.017123287671232876}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.029197080291970802},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.011029411764705883},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.02358490566037736},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.01838235294117647}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.0136986301369863}},"o":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.05}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}}}}}}}},"docs":{}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}}},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654}}}}}},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.007827788649706457}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"l":{"docs":{},"e":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.008207934336525308},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":5.009615384615385},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.013718411552346571},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.019569471624266144}},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.010273972602739725},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005054151624548736}}}},"i":{"docs":{},"l":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.005870841487279843}},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585}},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}}}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.0136986301369863},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.020833333333333332},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}},"e":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046153846153846156}}}}}}},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.007827788649706457}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}},"}":{"docs":{},")":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005054151624548736},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.009784735812133072}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}},"u":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.005870841487279843}}}}},"`":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585}}}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666}}}}}}}}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.029197080291970802}}}},"s":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}}}},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0555956678700361},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.07240704500978473},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.04149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.04149377593360996},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.04149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.04149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.04149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.07272727272727272},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.041666666666666664},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.027777777777777776},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.010273972602739725},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.03146374829001368},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.02054794520547945},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.02358490566037736},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.03125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.026041666666666668},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.01838235294117647},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.00909090909090909},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.009784735812133072},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.016597510373443983},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.016597510373443983},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.044444444444444446},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.014423076923076924},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.014423076923076924},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.016597510373443983},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.014423076923076924},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.016597510373443983},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.016597510373443983},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.014423076923076924},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.044444444444444446},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005054151624548736}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5}}}},"i":{"docs":{},"c":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}},"f":{"docs":{},"o":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756}}},"n":{"docs":{},"c":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0375},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.020833333333333332},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.00909090909090909}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":5.047120418848167},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":5.037037037037037},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":5.044776119402985},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":5.072727272727272},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":5.069444444444445},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":5.066666666666666},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":5.045454545454546},"coverage.html":{"ref":"coverage.html","tf":0.04216867469879518}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":5.017123287671233},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":5.014150943396227},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":5.01875},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":5.029761904761905},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":5.015625},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":5.036496350364963},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":5.011029411764706},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":5.004545454545455},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":5.0021660649819495},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":5.00587084148728},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":5.05},"coverage.html":{"ref":"coverage.html","tf":0.06626506024096386}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}},"s":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"s":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}},"t":{"docs":{},"r":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.012448132780082987},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.012448132780082987},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.02403846153846154},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.02403846153846154},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.012448132780082987},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.02403846153846154},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.012448132780082987},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.012448132780082987},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.02403846153846154},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.008298755186721992},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.008298755186721992},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.008298755186721992},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.008298755186721992},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.008298755186721992}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.03319502074688797},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.03319502074688797},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.03333333333333333},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.04326923076923077},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.04326923076923077},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.03319502074688797},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.04326923076923077},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.03319502074688797},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.03319502074688797},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.04326923076923077},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.03333333333333333}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.02074688796680498},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.02074688796680498},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.02074688796680498},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.02074688796680498},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.02074688796680498},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.019230769230769232},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.019230769230769232},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.019230769230769232},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.019230769230769232},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223}}}}}}}},"f":{"docs":{},"(":{"docs":{},"!":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.020942408376963352},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.01646090534979424},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.01990049751243781},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.020202020202020204}}}}},"w":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009575923392612859},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.030821917808219176},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.08125},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.005454545454545455},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.07329842931937172},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.06172839506172839},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.06467661691542288},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.05555555555555555}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":5.018867924528302},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":5.025},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}},"y":{"docs":{},"(":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.01}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.02617801047120419},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.0205761316872428},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":5.019900497512438},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.015151515151515152},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}},"o":{"docs":{},"h":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"e":{"docs":{},"@":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.014423076923076924},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.014423076923076924},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.014423076923076924},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.014423076923076924}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308}},"(":{"6":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.019230769230769232},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.019230769230769232},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.019230769230769232},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.019230769230769232}}},"docs":{}}}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.02051983584131327}}},"y":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.004332129963898917},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.029197080291970802}}}}}}}},"n":{"docs":{},"k":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":5.009615384615385},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}},"c":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}},"o":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":5.029761904761905},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.08333333333333333}}}}}}}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.012311901504787962}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.008298755186721992},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.008298755186721992},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.008298755186721992},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.008298755186721992},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.008298755186721992},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.027777777777777776},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.02666666666666667},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077},"coverage.html":{"ref":"coverage.html","tf":0.012048192771084338}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.01875},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.022058823529411766},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}},"o":{"docs":{},"f":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.011029411764705883},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046153846153846156}}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.023972602739726026}}}}}}}}},"n":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}},"(":{"6":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}}},"docs":{}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.015384615384615}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.04514363885088919},"modules.html":{"ref":"modules.html","tf":10.2}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}}}}},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01094391244870041},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}},"s":{"docs":{},"t":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.013679890560875513},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}},"'":{"docs":{},";":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009575923392612859}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"'":{"docs":{},";":{"docs":{},"@":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}}}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715}}}}},"i":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.010273972602739725}}}}}}}}}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.017272727272727273},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.025992779783393503},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.025440313111545987},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.012448132780082987},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.012448132780082987},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.014423076923076924},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.014423076923076924},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.012448132780082987},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.014423076923076924},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.012448132780082987},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.012448132780082987},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.014423076923076924},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223}},"l":{"docs":{},"i":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"2":{"3":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308}}},"docs":{}},"docs":{}},"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}},"x":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.02054794520547945}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.023972602739726026}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.008181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.01660649819494585},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.029354207436399216},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.04149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.04149377593360996},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.04149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.04149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.04149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.020942408376963352},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.03292181069958848},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.01990049751243781},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.07272727272727272},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.041666666666666664},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.030303030303030304}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.02815884476534296},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.019569471624266144}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.017857142857142856},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.021897810218978103},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.01516245487364621},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.04564315352697095},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.04564315352697095},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.04564315352697095},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.04564315352697095},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.04564315352697095},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.09722222222222222},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.09333333333333334}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.006498194945848376},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0136986301369863}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.007827788649706457}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585}}}}}},"`":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.004332129963898917}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.008207934336525308},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.043795620437956206},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.05235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.04938271604938271},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.03980099502487562},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.04040404040404041}}}}}}},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"m":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.055555555555555}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.023972602739726026},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315}}}}}}}}}}},"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.09375},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":5.020833333333333},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.005454545454545455},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":5.036363636363636},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.017123287671232876},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.02976190476190476},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.011029411764705883},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.007272727272727273},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.010830324909747292},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.03333333333333333},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.02403846153846154},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.02403846153846154},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.02403846153846154},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.02403846153846154},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.03333333333333333}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.03125}}}}}}},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.051094890510948905}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.051094890510948905}}}}}}}}}}}},"c":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.005454545454545455}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}},"l":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"2":{"3":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308}}},"docs":{}},"docs":{}},"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"2":{"3":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}}},"docs":{}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.009575923392612859},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.045454545454545456},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0273972602739726},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.044444444444444446},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.07211538461538461},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.07211538461538461},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.07211538461538461},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.07211538461538461},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.044444444444444446},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.015706806282722512},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.01646090534979424},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.014925373134328358},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.015151515151515152}},"/":{"docs":{},":":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.02054794520547945},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.01875},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.015625}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.0136986301369863},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.01875},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.02976190476190476},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.020833333333333332},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.011029411764705883},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.015454545454545455},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.011552346570397111},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.015655577299412915}},"e":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.00909090909090909},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.009386281588447653},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0136986301369863}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588}}}}},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0625},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.008181818181818182},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.008207934336525308},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.03676470588235294},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.05198555956678701},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.029045643153526972},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.029045643153526972},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.029045643153526972},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.029045643153526972},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.029045643153526972},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":5.152777777777778},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.14666666666666667},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046153846153846156},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"coverage.html":{"ref":"coverage.html","tf":0.012048192771084338}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.007942238267148015},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":5.008298755186722},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.018050541516245487},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.008298755186721992},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.008298755186721992},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.008298755186721992},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.008298755186721992},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.008298755186721992}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205}}}},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.01646090534979424},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.021897810218978103},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.08029197080291971}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":5.036496350364963},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.006363636363636364},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.005870841487279843},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.013636363636363636}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.0625},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.006363636363636364}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.024623803009575923},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.041666666666666664},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.00909090909090909},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0036101083032490976},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}}},"'":{"docs":{"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.023809523809523808},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.019090909090909092},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.03898916967509025},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0273972602739726}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.03319502074688797},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.03319502074688797},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.03319502074688797},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.03319502074688797},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.03319502074688797},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.05555555555555555},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.05333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.01094391244870041},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.014705882352941176},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.011029411764705883}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":5.014705882352941},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}},"e":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.017123287671232876}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.007827788649706457}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}}}}}},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666}}}}},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.008207934336525308}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.020833333333333332}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.04716981132075472},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.04044117647058824}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.0136986301369863}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.02617801047120419},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.0205761316872428},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.024875621890547265},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.027777777777777776},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.02666666666666667},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.030303030303030304}}}}}},"q":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.010273972602739725}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.030821917808219176},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.018867924528301886},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.014705882352941176},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.007827788649706457},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.018867924528301886},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.029411764705882353},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005776173285198556},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006839945280437756},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.02181818181818182},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":5.009615384615385},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.006363636363636364}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.006363636363636364}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}},"l":{"docs":{},"v":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.005454545454545455},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.01660649819494585}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.008298755186721992},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.008298755186721992},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.008298755186721992},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.008298755186721992},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.008298755186721992},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.027777777777777776},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.02666666666666667},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077},"coverage.html":{"ref":"coverage.html","tf":0.012048192771084338}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.0273972602739726},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.0136986301369863},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.018867924528301886},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.01875},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.015625},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.029197080291970802},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.014705882352941176},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.025454545454545455},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0332129963898917},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.03913894324853229},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.009386281588447653},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}},"e":{"docs":{},"v":{"docs":{"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.013679890560875513},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.04245283018867924},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.04044117647058824},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.06353790613718412},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.058091286307053944},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.058091286307053944},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.058091286307053944},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.058091286307053944},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.058091286307053944},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.05454545454545454},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.041666666666666664},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":5.093333333333334},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}}}}}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},".":{"docs":{},"t":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"coverage.html":{"ref":"coverage.html","tf":0.030120481927710843}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.007220216606498195},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":5.008298755186722},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.025992779783393503},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.024896265560165973},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.024896265560165973},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.024896265560165973},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.024896265560165973},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.024896265560165973}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":5.008298755186722},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.029411764705882353},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046153846153846156}},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.029197080291970802},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}},"x":{"docs":{},"j":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.024875621890547265},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.012311901504787962},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"e":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009575923392612859}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.023972602739726026},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.05625},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.046875},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":5.004545454545455},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.008207934336525308}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"s":{"docs":{},"'":{"docs":{},";":{"docs":{},"@":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},"@":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"'":{"docs":{},")":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"'":{"docs":{},")":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}},"e":{"docs":{},"]":{"docs":{},",":{"docs":{},"}":{"docs":{},")":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.009433962264150943},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.01838235294117647},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":5.0014440433213},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026}},"e":{"docs":{},"]":{"docs":{},",":{"docs":{},"}":{"docs":{},")":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":5.003913894324853},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.03571428571428571},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.01},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904}}}}}}}}},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.01646090534979424},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.01094391244870041},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}},"/":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.031413612565445025},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.024691358024691357},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.029850746268656716},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.030303030303030304}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}},"l":{"docs":{},"f":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}},",":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":5.009615384615385},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.014705882352941176},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.011904761904761904},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.007220216606498195},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}}}}}}}},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205}}}},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.05357142857142857},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.03125},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.03727272727272727},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.004332129963898917},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.005870841487279843},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.02074688796680498},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.02074688796680498},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.044444444444444446},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.04326923076923077},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.04326923076923077},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.02074688796680498},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.04326923076923077},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.02074688796680498},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.02074688796680498},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.04326923076923077},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.044444444444444446},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.041884816753926704},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.06584362139917696},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.05970149253731343},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.09722222222222222},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.12},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.050505050505050504}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.017123287671232876},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.01875},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.015625}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}},"e":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.006363636363636364}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.002888086642599278}}}}}}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005}}}}}}}}},"b":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.015151515151515152}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.041666666666666664},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"/":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"z":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"coverage.html":{"ref":"coverage.html","tf":0.024096385542168676}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051},"coverage.html":{"ref":"coverage.html","tf":0.024096385542168676}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"/":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},".":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"coverage.html":{"ref":"coverage.html","tf":0.030120481927710843}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.013888888888888888},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334},"coverage.html":{"ref":"coverage.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"coverage.html":{"ref":"coverage.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364}}}}}}},"p":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.007827788649706457}}}}}}}}},"m":{"docs":{},"e":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}},"s":{"docs":{},"l":{"docs":{},"v":{"3":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}},"docs":{}},"/":{"docs":{},"t":{"docs":{},"l":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.027777777777777776},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}},"s":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.0072992700729927005}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"}":{"docs":{},"?":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"=":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"3":{"2":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0027272727272727275},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.009784735812133072}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.005870841487279843}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0036101083032490976}},"(":{"docs":{},"{":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.007220216606498195}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005054151624548736}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.013636363636363636},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.03104693140794224},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.03913894324853229},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.008207934336525308},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0375},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.020833333333333332},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.022727272727272728},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.04712041884816754},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.037037037037037035},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.05472636815920398},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.05555555555555555}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.005208333333333333}}}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":5.01010101010101},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.008664259927797834}}}},"i":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.007272727272727273},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.03333333333333333},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.02403846153846154},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.02403846153846154},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.02403846153846154},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.02403846153846154},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.03333333333333333}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.05357142857142857}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.005454545454545455},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00823045267489712},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.014925373134328358},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}}}},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364}},"s":{"docs":{},"v":{"1":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}},"docs":{}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.03319502074688797},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.03319502074688797},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.03319502074688797},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.03319502074688797},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.03319502074688797},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.012345679012345678},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.05555555555555555},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.05333333333333334},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}},"i":{"docs":{},"c":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0036363636363636364}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575}}}}}}}}},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}},"y":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.003676470588235294}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.01818181818181818},"interfaces/Permission.html":{"ref":"interfaces/Permission.html","tf":0.027777777777777776},"interfaces/Role.html":{"ref":"interfaces/Role.html","tf":0.013333333333333334}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.009386281588447653},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.015655577299412915},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.022222222222222223},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.022222222222222223}},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.019569471624266144},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":5.022222222222222},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}},"a":{"docs":{},"t":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.005054151624548736}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.004332129963898917}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0021660649819494585}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.003424657534246575},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.004545454545454545},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.015047879616963064},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.023972602739726026},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.014150943396226415},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.025},"injectables/MailService.html":{"ref":"injectables/MailService.html","tf":0.05952380952380952},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.011029411764705883},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.005454545454545455},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.02617801047120419},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.024691358024691357},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.029850746268656716},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.025252525252525252},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009575923392612859}}}},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}},"s":{"docs":{},"(":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.05198358413132695},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.05136986301369863},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.05188679245283019},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.036458333333333336},"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.05514705882352941},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.05090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.02815884476534296},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.13111545988258316},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.03734439834024896},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.03734439834024896},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.05555555555555555},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.10096153846153846},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.10096153846153846},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.03734439834024896},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.10096153846153846},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.03734439834024896},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.03734439834024896},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.10096153846153846},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.05555555555555555},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010471204188481676},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.01646090534979424},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/OAuthProfile.html":{"ref":"interfaces/OAuthProfile.html","tf":0.03636363636363636},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.005471956224350205},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.010101010101010102}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}}},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.0047169811320754715}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.0019569471624266144}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.01444043321299639},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.008298755186721992},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.008298755186721992},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.008298755186721992},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.008298755186721992},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.008298755186721992},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.001444043321299639}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/SecureRbacService.html":{"ref":"injectables/SecureRbacService.html","tf":0.0007220216606498195}}}}}}}}}}}}}}},"@":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03076923076923077}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.004975124378109453},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0027359781121751026},"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.04375},"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.015625},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.005454545454545455},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthStrategy.html":{"ref":"injectables/OAuthStrategy.html","tf":0.010416666666666666}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/JwtStrategy.html":{"ref":"injectables/JwtStrategy.html","tf":0.0125},"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015384615384615385}}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.004103967168262654}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthMiddleware.html":{"ref":"injectables/AuthMiddleware.html","tf":0.00684931506849315},"injectables/PrismaService.html":{"ref":"injectables/PrismaService.html","tf":0.014598540145985401},"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005235602094240838},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.00411522633744856},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.009950248756218905},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.005050505050505051}}},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091},"injectables/SecureUserService.html":{"ref":"injectables/SecureUserService.html","tf":0.003913894324853229}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.020942408376963352},"interfaces/AuthConfigure.html":{"ref":"interfaces/AuthConfigure.html","tf":0.01646090534979424},"interfaces/JwtConfig.html":{"ref":"interfaces/JwtConfig.html","tf":0.01990049751243781},"interfaces/TokenPayload.html":{"ref":"interfaces/TokenPayload.html","tf":0.020202020202020204}}},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/RbacAuthGuard.html":{"ref":"injectables/RbacAuthGuard.html","tf":0.007352941176470588}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.008298755186721992},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.008298755186721992},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.008298755186721992},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.008298755186721992},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.008298755186721992}}}}}}},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0013679890560875513}}}}}},"z":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}}}},"d":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.016666666666666666},"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/CreateUserDto.html":{"ref":"classes/CreateUserDto.html","tf":0.011111111111111112},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308},"classes/UpdateUserDto.html":{"ref":"classes/UpdateUserDto.html","tf":0.011111111111111112}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":0.03333333333333333}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/ZodValidationPipe.html":{"ref":"injectables/ZodValidationPipe.html","tf":5.033333333333333},"coverage.html":{"ref":"coverage.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}},"]":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"z":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.004149377593360996},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.004149377593360996},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.004149377593360996},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.004149377593360996},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.004149377593360996}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.016597510373443983},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.016597510373443983},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.016597510373443983},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.016597510373443983},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.016597510373443983}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.004807692307692308},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.004807692307692308},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.004807692307692308},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.004807692307692308}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.02074688796680498},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.02074688796680498},"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.014423076923076924},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.014423076923076924},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.02074688796680498},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.014423076923076924},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.02074688796680498},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.02074688796680498},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.014423076923076924}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"classes/AssignPermissionToRoleDto.html":{"ref":"classes/AssignPermissionToRoleDto.html","tf":0.008298755186721992},"classes/AssignRoleToUserDto.html":{"ref":"classes/AssignRoleToUserDto.html","tf":0.008298755186721992},"classes/PermissionDto.html":{"ref":"classes/PermissionDto.html","tf":0.008298755186721992},"classes/RoleDto.html":{"ref":"classes/RoleDto.html","tf":0.008298755186721992},"classes/RoleIdDto.html":{"ref":"classes/RoleIdDto.html","tf":0.008298755186721992}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.009615384615384616},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.009615384615384616},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.009615384615384616},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.009615384615384616}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"6":{"docs":{"classes/ForgotPasswordDto.html":{"ref":"classes/ForgotPasswordDto.html","tf":0.014423076923076924},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.014423076923076924},"classes/ResetPasswordDto.html":{"ref":"classes/ResetPasswordDto.html","tf":0.014423076923076924},"classes/SignupDto.html":{"ref":"classes/SignupDto.html","tf":0.014423076923076924}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"+":{"docs":{},"{":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"[":{"docs":{},"\\":{"docs":{},"]":{"docs":{},":":{"docs":{},";":{"docs":{},"<":{"docs":{},">":{"docs":{},",":{"docs":{},".":{"docs":{},"?":{"docs":{},"~":{"docs":{},"`":{"docs":{},"]":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SecureAuthService.html":{"ref":"injectables/SecureAuthService.html","tf":0.0009090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"length":2536},"corpusTokens":["0","0/1","0/2","1","1,2","1/1","10","100","11","12/14","15/18","1d","2/2","3/3","400","500","7","8","8/8","83","85","_+{}\\[\\]:;<>,.?~`]/.test(password","abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789","access","access_token","accesstoken","acknowledg","activ","actual","add","addit","address","advanc","allow","allpermiss","alreadi","api","apiproperti","app.com/auth/callback","app.modul","app.module.t","app/callback","applic","application'","appmodul","argument","argumentmetadata","array","asignpermissiontorol","asignpermissiontorole(assignpermissiontoroledto","assign","assignpermissiontoroledto","assignroletous","assignroletouser(assignroletous","assignroletouserdto","associ","assum","async","asynchron","attach","auth","auth/forgot","auth/login","auth/prismaservice/prisma.servic","auth/reset","auth/signup","authconfig","authconfigur","authconfigure['emailtransport","authconfigure['forgotpassword","authent","authguard","authguard('jwt","authmiddlewar","author","authorizationurl","authservic","await","badrequestexcept","badrequestexception(`valid","base","bcrypt","bcrypt.compare(oldpassword","bcrypt.compare(password","bcrypt.hash(newpassword","bcrypt.hash(password","bodi","boolean","browser","call","callback","callbackurl","canactiv","canactivate(context","catch","catch(error","certif","chain","chang","charact","check","cipher","class","click","client","clientid","clientsecret","collect","commun","compos","comprehens","config","config.get('jwt_secret","configmodul","configmodule.forroot","configservic","configur","connect","console.log(id","console.log(this.configservice.get('jwt').secret","const","constructor","constructor(authservic","constructor(mailerservic","constructor(opt","constructor(prisma","constructor(priv","constructor(rbacservic","constructor(reflector","constructor(schema","contain","content","context","context.gethandl","context.switchtohttp().getrequest","continu","contribut","contributor","control","coverag","creat","createpermiss","createpermission(permissiondto","createrol","createrole(roledto","createtransport","createus","createuser(createuserdto","createuserdto","createuserdto.email","creation","credenti","criteria","current","custom","d/.test(password","data","databas","databasemodul","databasemodule.forroot","datasourc","date(date.now","date(expir","date.now","db","deactiv","deactivateus","deactivateuser(id","decod","decor","default","defin","delet","deletedat","deleterol","deleterole(roleid","deleteus","deleteuser(id","depend","descript","design","detail","determin","disconnect","document","doesn't","done","done(err","done(new","done(nul","dto","dto/permiss","dto/user.dto","e.g","each","email","emailtransport","emailtransporterconfig","enabl","endpoint","enforc","ensur","err","error","error.issues[0].messag","etc","exampl","excel","execut","executioncontext","exist","existingus","expect","expir","expiresin","explan","export","express","extend","extract","extractjwt","extractjwt.fromauthheaderasbearertoken","fail","fals","featur","feel","fetch","field","file","filter((permiss","find","findorcreateuserfromoauthprofil","findorcreateuserfromoauthprofile(profil","finduserbyemail","finduserbyemail(email","fine","flatmap((rol","flow","follow","for(let","forgot","forgotpassword","forgotpassword(email","forgotpasswordconfig","forgotpassworddto","forgotpasswordschema","forroot","found","found/creat","framework","fredrick","free","full","function","gate","gener","generaterandomstr","generaterandomstring(length","getpermiss","getpermissionbyid","getpermissionbyid(id","getpermissionsforus","getpermissionsforuser(userid","getprivatedata","getrol","getrolebyid","getrolebyid(roleid","getus","getuserbyid","getuserbyid(id","github","given","grain","guard","handl","handler","hashedpassword","hashpassword","haslowercas","hasnumb","haspermiss","haspermission(userid","hasrol","hasroles(userid","hasspecialcharact","hasuppercas","help","here","here'","here})export","hook","host","hostnam","http://your","httpexcept","httpexception('invalid","httpexception('password","httpexception('permiss","httpexception('rol","httpexception('us","httpexception(`permiss","httpexception(`rol","httpexception(error.messag","https://example.com/oauth2/author","https://example.com/oauth2/token","https://oauth","https://your","id","identifi","if(!rol","if(!verifypassword","if(rol","if(role.deletedat","if(role.nam","implement","import","improv","includ","index","indic","info","inform","initi","inject","instal","instanc","instanceof","integr","interact","interfac","interfaces/auth.interfac","interfaces/user.interfac","invalid","isarray","isemail","isglob","islengthvalid","isnotempti","isnumb","isopt","ispasswordstrong","ispasswordstrong(password","ispasswordvalid","isstr","issu","johndoe@gmail.com","json","jwt","jwtauthguard","jwtauthguard.thi","jwtconfig","jwtfromrequest","jwtoption","jwtservic","jwtstrategi","jwtstrategy(jwtopt","key","length","length(6","let'","librari","library'","licens","lifecycl","link","list","logic","login","login(email","logindto","look","mailer/mail.servic","mailerservic","mailmodul","mailservic","main","maintain","manag","match","meet","messag","metadata","method","methodof","middlewar","millisecond","min","minlength","minlength(6","miscellan","mit","model","modul","modules/mail","more","multipl","name","necessari","need","nestj","nestjs.it","nestjs.thi","nestjs/common","nestjs/common';import","nestjs/config","nestjs/config';@modul","nestjs/cor","nestjs/jwt","nestjs/map","nestjs/passport","nestjs/swagg","nestmiddlewar","new","newli","newpassword","newpassword123","newus","next","next(err","next(new","nextfunct","nodemail","nodemailer.createtransport","nodemailer.transport","note","notfoundexcept","notfoundexception('permiss","notfoundexception('rol","notfoundexception('us","notfoundexception(`permiss","notfoundexception(`rol","npm","null","number","oauth","oauth2","oauth2strategi","oauthprofil","oauthstrategi","object","observ","obtain","occur","old","oldpassword","oldpassword123","onc","onmoduledestroy","onmoduleinit","open","oper","option","orm","oryarn","otherwis","out","over","overrid","overview","p.id","param","paramet","parent","partial","partialtyp","partialtype(createuserdto","particular","pass","passport","passport.authent","passport.authenticate('jwt","passport.us","passportstrategi","passportstrategy(strategi","password","password.length","password/:token","password123","payload","payload.sub","permiss","permission.deletedat","permission.interface.t","permissiondisconnect","permissiondto","permissionid","permissionids.foreach","permissionids.foreach(async","permissionids.includes(permission.id","permissionids.length","permissionids.map((permissionid","permissioninrol","permissions('permiss","permissions('read","permissionschema","permissiontoroleschema","pipe.t","pipetransform","port","post","previou","primari","prisma","prisma.prismaclientopt","prisma/cli","prismacli","prismaservic","prismaservice/prisma.servic","privat","privatecontrol","process","process.env.database_url","process.env.jwt_expires_in","process.env.jwt_secret","process.env.oauth_client_id","process.env.oauth_client_secret","profil","profile.id","project","promis","properti","provid","provider'","provider.com/auth","provider.com/token","public","pull","question","rbac","rbac/service/rbac.servic","rbacauthguard","rbacservic","re","reach","reactiv","reactivateus","reactivateuser(id","readm","readonli","receiv","recipi","recipient'","record","redirect","refer","reflector","refresh","refreshtoken","regist","rejectunauthor","relat","relev","remov","removepermissionfromrol","removepermissionfromrole(removepermissionfromroledto","removepermissionfromroledto","replac","repositori","repres","req","req.us","request","request.us","requir","requiredpermiss","requiredpermissions.includes(permission.nam","requiredrol","requiredroles.includes(roles.nam","reset","resetpassword","resetpassword(userid","resetpassworddto","resetpasswordexpir","resetpasswordschema","resetpasswordurl","resettoken","resettokenexpir","reseturl","resolv","resourc","respons","result","retriev","return","reusabl","revokeroleofus","revokeroleofuser(revokeroleofuserdto","revokeroleofuserdto","robust","role","role.deletedat","role.dto","role.dto.t","role.id","role.nam","role.permiss","role.permissions.find((p","roledto","roleid","roleiddto","roleidschema","roles('rol","roles.some((rol","roleschema","rolestatusschema","root","rout","route.overrid","run","rxj","saltpound","saltround","same","schema","seamlessli","secret","secretorkey","secur","secureauthmodul","secureauthmodule.forroot","secureauthservic","secureg","securegatemodul","securegates';@controller('private')@roles('admin')export","securegates';@controller('private')export","securegates';@controller('users')export","securegates';@modul","securegates';import","securerbacmodul","securerbacmodule],})export","securerbacservic","secureusermodul","secureusermodule],})export","secureuserservic","select","self","send","sendemail","sendemail(to","sender","sendresetpasswordemail","sendresetpasswordemail(email","sent","server","servic","service/rbac.servic","services/auth.servic","servicesretriev","session","set","shutdown","shutdown.disconnect","sign","signup","signup(email","signup,password","signupdto","simplifi","softwar","sourc","specif","specifi","src/auth/common/zod","src/auth/dto/user.dto.t","src/auth/guards/jwt.guard.t","src/auth/interfaces/auth.interface.t","src/auth/interfaces/user.interface.t","src/auth/mailer/mail.service.t","src/auth/middleware/auth.middleware.t","src/auth/prismaservice/prisma.service.t","src/auth/services/auth.service.t","src/auth/strategies/jwt.strategy.t","src/auth/strategies/oauth.strategy.t","src/rbac/dto/permiss","src/rbac/guard/rbac.guard.t","src/rbac/interface/rol","src/rbac/service/rbac.service.t","src/user/dto/user.dto.t","src/user/service/user.service.t","ssl/tl","sslv3","startup","startup.connect","statement","step","storag","store","storeresettoken","storeresettoken(email","str","strategi","strength","string","strong","sub","subject","success","successfulli","such","suggest","super","super(opt","super.canactivate(context","support","svg","system","tabl","task","temp","templat","templates/reset","temporari","this.$connect","this.$disconnect","this.authservice.findorcreateuserfromoauthprofile(profil","this.authservice.validatetokenpayload(payload","this.configservice.get('emailtransport","this.configservice.get('forgotpassword","this.configservice.get('jwt').secret","this.createtransport","this.emailtransporterconfig","this.forgotpasswordconfig","this.forgotpasswordconfig.resetpasswordexpir","this.forgotpasswordconfig.resetpasswordurl}?token=${resettoken","this.generaterandomstring(32","this.getpermissionsforuser(userid","this.getuserbyid(id","this.jwtservice.sign(payload","this.mailerservice.sendmail","this.mailservice.sendemail(email","this.prisma.permission.cr","this.prisma.permission.findfirst","this.prisma.permission.findfirst({wher","this.prisma.permission.findmani","this.prisma.permission.upd","this.prisma.role.cr","this.prisma.role.findfirst","this.prisma.role.findmani","this.prisma.role.finduniqu","this.prisma.role.upd","this.prisma.role.update({wher","this.prisma.user.cr","this.prisma.user.delet","this.prisma.user.findfirst","this.prisma.user.findmani","this.prisma.user.finduniqu","this.prisma.user.findunique({wher","this.prisma.user.upd","this.rbacservice.haspermission(user.id","this.rbacservice.hasroles(user.id","this.reflector.get('permiss","this.reflector.get('rol","this.schema.parse(valu","this.sendresetpasswordemail(email","this.storeresettoken(email","this.transport","this.userservice.getus","throw","time","tl","tlsv1","token","tokenpayload","tokenurl","transfer","transform","transform(valu","transport","tri","trigger","true","type","typic","unauthorizedexcept","unauthorizedexception('invalid","unauthorizedexception('unauthor","unauthorizedexception('us","unauthorizedexception('usernam","unauthorizedexception('y","undeleterol","undeleterole(roleid","under","uniqu","updat","updatedat","updatedus","updatepermiss","updatepermission(id","updatepermissiondto","updatepermissionstorol","updatepermissionstoroles(updatepermissiontoroledto","updatepermissiontoroledto","updaterol","updaterole(roleid","updateroledto","updateus","updateuser(id","updateuserdto","upon","url","us","usag","use(req","useguard","useguards(jwtauthguard","user","user'","user.deletedat","user.email","user.id","user.password","user.rol","user.roles.includes(rol","user.roles.length","user@example.com","userauthschema","userid","usernam","userrol","userscontrol","userservic","userwithrol","userwithroles.rol","valid","validate(accesstoken","validate(payload","validatetokenpayload","validatetokenpayload(payload","valu","variabl","verifi","verifypassword","via","void","web","welcom","whether","write","yalley","yarn","z","z.array(z.numb","z.coerce.string().min(6","z.number","z.number().posit","z.object","z.string().email","z.string().tolowercas","z]/.test(password","zod","zoderror","zodschema","zodvalidationpip","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nAuthentication and Authorization Library for NestJS\n\nSecure Gates - NestJS Library\nThe Secure Gates library is a comprehensive and secure collection of reusable services and modules for authentication, role-based access control (RBAC), and user management in NestJS applications. This library is designed to provide robust security features and simplify the implementation of authentication and access control in your applications.\nFeatures\n\nSecureAuthService: Provides authentication functionalities like login, signup, password reset, and token validation using JSON Web Tokens (JWT).\nSecureRbacService: Implements Role-Based Access Control (RBAC) to manage user roles and permissions, allowing fine-grained control over access to resources.\nSecureUserService: Handles user management operations, including user creation, updating, deletion, activation, and deactivation.\nPrismaService: Extends PrismaClient to connect to the database securely.\nMailService: Sends emails, including password reset emails, to users.\n\nTable of Contents\n\nInstallation\nAuthentication Module\nUsage\nAPI Reference\n\n\nRBAC Module\nUsage\nAPI Reference\n\n\nUser Module\nUsage\nAPI Reference\n\n\nDocumentation\nLicense\nSupport\nAuthor\nAcknowledgments\n\nInstallation\nTo use the Secure Gates library in your NestJS application, follow these steps:\n\nInstall the library via npm or yarn:\n\nnpm install securegates# oryarn add securegates\nImport the required modules and services into your application's main module:\n\nIn the user's app.module, you would need to import and configure the modules provided by the SecureGates library. Let's assume that the SecureGates library is installed as a dependency and you have access to the modules exported by the library. Here's how the user's app.module.ts would look like:\nimport { Module } from '@nestjs/common';import { SecureAuthModule, DatabaseModule, MailModule, SecureGateModule } from 'securegates';import { ConfigModule } from '@nestjs/config';@Module({  imports: [    // Import the SecureAuthModule to enable authentication functionalities    SecureAuthModule.forRoot({      jwt: {        secret: process.env.JWT_SECRET,        expiresIn: process.env.JWT_EXPIRES_IN,      },      // Other authentication configuration options if needed    }),    // Import the DatabaseModule to enable database connectivity    DatabaseModule.forRoot({      // PrismaClient options for the database connection      datasources: {        db: {          url: process.env.DATABASE_URL,        },      },      // Add your user-defined Prisma models here if needed      // models: {      //   User: {      //     // Model configuration      //   },      // },    }),    // Import other user-defined modules if needed    ConfigModule.forRoot({      isGlobal: true,    }),  ],  controllers: [], // Add your controllers here  providers: [], // Add your providers here})export class AppModule {}Explanation:\n\nWe import the necessary modules from the SecureGates library: SecureAuthModule, and DatabaseModule.\n\nWe configure each module using the .forRoot() method and provide the required options based on our application's needs. For example, we configure the SecureAuthModule with JWT secret and expiration, the DatabaseModule with the database URL etc.\n\nWe import other user-defined modules as needed. In this example, we import the ConfigModule from NestJS to handle configuration options.\n\nWe add any user-defined controllers and providers if needed.\n\n\nBy importing and configuring these modules in the app.module.ts, the user's application will have access to the authentication functionalities provided by the SecureAuthModule, and database connectivity via the PrismaService from the DatabaseModule,. This ensures that the SecureGates library seamlessly integrates into the user's NestJS application, providing all the necessary features for secure authentication and user management.\nUsage\nAuthentication Module\nThe Authentication Module handles user authentication and JWT token generation. It provides endpoints for login, signup, password reset, and token validation.\nUsage\nTo use the Authentication Module in your NestJS application, follow these steps:\n\nImport the SecureAuthModule in your application's root module:\n\nimport { Module } from '@nestjs/common';import { SecureAuthModule } from 'securegates';@Module({  imports: [SecureAuthModule.forRoot({    // Configure your JWT options here    jwt: {      secret: 'your-secret-key',      expiresIn: '1d',    },    // Other configuration options  })],})export class AppModule {}\nAdd the authentication guards to your controllers or routes that require authentication:\n\nimport { Controller, Get, UseGuards } from '@nestjs/common';import { JwtAuthGuard } from 'securegates';@Controller('private')export class PrivateController {  @Get()  @UseGuards(JwtAuthGuard)  getPrivateData() {    return { message: 'This is private data!' };  }}API Reference\nThe Authentication Module provides the following endpoints:\n\n/auth/login - POST: Authenticate a user and generate a JWT token.\n/auth/signup - POST: Register a new user with an email and password.\n/auth/forgot-password - POST: Initiate the password reset process for a user.\n/auth/reset-password/:token - POST: Reset the password for a user using a token received via email.\n\nRBAC Module\nThe RBAC (Role-Based Access Control) Module allows you to manage user roles and permissions. It provides endpoints for creating and assigning roles, managing permissions, and checking user access.\nUsage\nTo use the RBAC Module in your NestJS application, follow these steps:\n\nImport the SecureRbacModule in your application's root module:\n\nimport { Module } from '@nestjs/common';import { SecureRbacModule } from 'securegates';@Module({  imports: [SecureRbacModule],})export class AppModule {}\nUse the provided decorators in your controllers or services to enforce role-based access control:\n\nimport { Controller, Get } from '@nestjs/common';import {  Permissions, Roles } from 'securegates';@Controller('private')@Roles('admin')export class PrivateController {  @Get()  @Permissions('read')  getPrivateData() {    return { message: 'This is private data!' };  }}API Reference\nThe RBAC Module provides the following decorators:\n\n@Roles('role'): Specifies the roles required to access the endpoint. You can specify multiple roles as arguments.\n@Permissions('permission'): Specifies the permissions required to access the endpoint. You can specify multiple permissions as arguments.\n\nUser Module\nThe User Module provides user management functionalities, such as creating, updating, and deleting users.\nUsage\nTo use the User Module in your NestJS application, follow these steps:\n\nImport the SecureUserModule in your application's root module:\n\nimport { Module } from '@nestjs/common';import { SecureUserModule } from 'securegates';@Module({  imports: [SecureUserModule],})export class AppModule {}\nUse the provided service to manage users in your controllers or services:\n\nimport { Controller, Get } from '@nestjs/common';import { SecureUserService } from 'securegates';@Controller('users')export class UsersController {  constructor(private readonly userService: SecureUserService) {}  @Get()  async getUsers() {    const users = await this.userService.getUsers();    return users;  }}API Reference\nThe User Module provides the SecureUserService service with methods to interact with user data:\n\ngetUsers(): Get a list of all users.\nfindUserByEmail(email: string): Find a user by their email.\ngetUserById(id: number): Find a user by their ID.\ncreateUser(createUserDto: CreateUserDto): Create a new user.\nupdateUser(id: number, updateUserDto: UpdateUserDto): Update an existing user.\ndeleteUser(id: number): Delete a user by their ID.\ndeactivateUser(id: number): Deactivate a user by their ID.\nreactivateUser(id: number): Reactivate a deactivated user by their ID.\n\nDocumentation\nCheck out the full documentation for detailed information about the Auth module, services, and more.\nContribution\nContributions to the Secure Gates library are welcome! If you find any issues or have suggestions for improvement, feel free to open a pull request or create an issue on the repository.\nLicense\nThe Secure Gates library is open-source software licensed under the MIT License.\nUse the library's services and decorators in your controllers to handle authentication, RBAC, and user management tasks.\nSupport\nIf you need any help or have questions, feel free to reach out to the library maintainers or check the GitHub repository for additional resources.\nAuthors\n\nFredrick Yalley - Your GitHub Profile\n\nAcknowledgments\n\nNestJS community and contributors for providing an excellent framework.\nOther open-source libraries used in this project.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        11 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/middleware/auth.middleware.ts\n        \n\n            \n                Description\n            \n            \n                Injectable middleware responsible for handling JWT and OAuth2 authentication.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(authService: SecureAuthService)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of the AuthMiddleware.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authService\n                                                                    :     SecureAuthService\n            \n                                                            \n                                                            \n                                                                \n            The SecureAuthService used for authentication and user validation.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     use\n                                \n                            \n            \n                            \n                                \n            use(req: any, res: any, next: NextFunction)\n                                \n                            \n            \n                            \n                                \n                                        Middleware function to handle JWT and OAuth2 authentication.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                req\n                                                                    :     Request\n            \n                                                            \n                                                            \n                                                                \n            The Express Request object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                res\n                                                                    :     Response\n            \n                                                            \n                                                            \n                                                                \n            The Express Response object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                next\n                                                                    :     NextFunction\n            \n                                                            \n                                                            \n                                                                \n            The NextFunction to continue the middleware chain.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { HttpException, Injectable, NestMiddleware, UnauthorizedException } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport * as passport from 'passport';\r\nimport { ExtractJwt, Strategy as JwtStrategy } from 'passport-jwt';\r\nimport { Strategy as OAuth2Strategy } from 'passport-oauth2';\r\nimport { SecureAuthService } from '../services/auth.service';\r\n\r\n/**\r\n * Injectable middleware responsible for handling JWT and OAuth2 authentication.\r\n *\r\n * @class\r\n * @name AuthMiddleware\r\n * @implements {NestMiddleware}\r\n */\r\n@Injectable()\r\nexport class AuthMiddleware implements NestMiddleware {\r\n    /**\r\n   * Creates an instance of the AuthMiddleware.\r\n   *\r\n   * @constructor\r\n   * @param {SecureAuthService} authService - The SecureAuthService used for authentication and user validation.\r\n   */\r\n  constructor(private readonly authService: SecureAuthService) {\r\n    // Define the options for the JWT strategy\r\n    const jwtOptions = {\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: process.env.JWT_SECRET, // Replace with your actual JWT secret key\r\n    };\r\n\r\n    // Create the JWT strategy and use it with passport\r\n    passport.use(\r\n      new JwtStrategy(jwtOptions, async (payload, done) => {\r\n        try {\r\n          const user = await this.authService.validateTokenPayload(payload);\r\n          done(null, user); // User found, attach the user to the request.\r\n        } catch (err) {\r\n          done(new UnauthorizedException('Invalid token'));\r\n        }\r\n      })\r\n    );\r\n\r\n  //   // Create the OAuth2 strategy and use it with passport\r\n  //   passport.use(\r\n  //     new OAuth2Strategy(\r\n  //       {\r\n  //         authorizationURL: 'https://example.com/oauth2/authorize',\r\n  //         tokenURL: 'https://example.com/oauth2/token',\r\n  //         clientID: process.env.OAUTH_CLIENT_ID, // Replace with your OAuth client ID\r\n  //         clientSecret: process.env.OAUTH_CLIENT_SECRET, // Replace with your OAuth client secret\r\n  //         callbackURL: 'https://your-app/callback', // Replace with your callback URL\r\n  //       },\r\n  //       async (accessToken, refreshToken, profile, done) => {\r\n  //         try {\r\n  //           // Implement your custom logic to fetch or create the user from the profile\r\n  //           const user = await this.authService.findOrCreateUserFromOAuthProfile(profile);\r\n  //           done(null, user); // User found/created, attach the user to the request.\r\n  //         } catch (err) {\r\n  //           done(err);\r\n  //         }\r\n  //       }\r\n  //     )\r\n  //   );\r\n  }\r\n\r\n   /**\r\n   * Middleware function to handle JWT and OAuth2 authentication.\r\n   *\r\n   * @function\r\n   * @async\r\n   * @name use\r\n   * @param {Request} req - The Express Request object.\r\n   * @param {Response} res - The Express Response object.\r\n   * @param {NextFunction} next - The NextFunction to continue the middleware chain.\r\n   * @returns {void}\r\n   */\r\n\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    // Use the passport.authenticate middleware to trigger the JWT or OAuth2 authentication process\r\n    passport.authenticate('jwt', { session: false }, (err, user) => {\r\n      if (err) {\r\n        return next(err);\r\n      }\r\n\r\n      if (!user) {\r\n        return next(new UnauthorizedException('Unauthorized'));\r\n      }\r\n\r\n      // Attach the user object to the request\r\n      req.user = user;\r\n      next();\r\n    })(req, res, next);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n            \n                Description\n            \n            \n                Custom JWT AuthGuard that extends the default AuthGuard('jwt') provided by NestJS.This class adds role-based access control (RBAC) by checking if the user has the required roles.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(reflector: Reflector, rbacService: any)\n                                \n                            \n            \n                            \n                                \n                                        Constructor of the JwtAuthGuard class.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                reflector\n                                                                    :     Reflector\n            \n                                                            \n                                                            \n                                                                \n            The reflector used to retrieve metadata for the handler.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     canActivate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    canActivate(context: ExecutionContext)\n                                \n                            \n            \n                            \n                                \n                                        Method to determine if the user is authorized to access the route.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                context\n                                                                    :     ExecutionContext\n            \n                                                            \n                                                            \n                                                                \n            The context of the current request.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            A boolean indicating if the user is authorized.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SecureRbacService } from 'rbac/service/rbac.service';\r\n\r\n/**\r\n * Custom JWT AuthGuard that extends the default AuthGuard('jwt') provided by NestJS.\r\n * This class adds role-based access control (RBAC) by checking if the user has the required roles.\r\n */\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {\r\n  /**\r\n   * Constructor of the JwtAuthGuard class.\r\n   * @param {Reflector} reflector - The reflector used to retrieve metadata for the handler.\r\n   */\r\n  constructor(private reflector: Reflector, private readonly rbacService: SecureRbacService,) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Method to determine if the user is authorized to access the route.\r\n   * @param {ExecutionContext} context - The context of the current request.\r\n   * @returns {boolean | Promise | Observable} - A boolean indicating if the user is authorized.\r\n   */\r\n  async canActivate(context: ExecutionContext):  Promise  {\r\n   // Run the JWT authentication using the AuthGuard\r\n   const canActivate = await super.canActivate(context);\r\n   if (!canActivate) {\r\n     return false;\r\n   }\r\n\r\n    // Extract the user object from the request\r\n    const request = context.switchToHttp().getRequest();\r\n    const user = request.user;\r\n\r\n    const requiredRoles = this.reflector.get('roles', context.getHandler()) || [];\r\n\r\n    // Assuming the user object contains a `roles` property representing the user's roles\r\n    // Check if the user has any of the required roles\r\n        // Check if the user has the required roles\r\n        const hasRoles = await this.rbacService.hasRoles(user.id, requiredRoles);\r\n\r\n    // const hasRole = roles.some((role) => user.roles.includes(role));\r\n    if (!hasRoles ) {\r\n      throw new UnauthorizedException('You do not have role access to this resource.');\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Passport JWT strategy for handling JWT-based authentication.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(authService: SecureAuthService, config: any)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of JwtStrategy.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authService\n                                                                    :     SecureAuthService\n            \n                                                            \n                                                            \n                                                                \n            The instance of the SecureAuthService used for validating token payloads.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                config\n                                                                    :     ConfigService\n            \n                                                            \n                                                            \n                                                                \n            The instance of the ConfigService used for retrieving the JWT secret key.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     validate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validate(payload: any)\n                                \n                            \n            \n                            \n                                \n                                        Validates the payload of a JWT token by calling the validateTokenPayload method of the SecureAuthService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                payload\n                                                            \n                                                            \n                                                                \n            The decoded payload of the JWT token.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The user associated with the payload if valid.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Strategy, ExtractJwt } from 'passport-jwt';\r\nimport { SecureAuthService } from '../services/auth.service';\r\nimport { ConfigService } from '@nestjs/config';\r\n\r\n/**\r\n * Passport JWT strategy for handling JWT-based authentication.\r\n *\r\n * @class\r\n * @extends PassportStrategy(Strategy, 'jwt')\r\n */\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\r\n  /**\r\n   * Creates an instance of JwtStrategy.\r\n   *\r\n   * @constructor\r\n   * @param {SecureAuthService} authService - The instance of the SecureAuthService used for validating token payloads.\r\n   * @param {ConfigService} config - The instance of the ConfigService used for retrieving the JWT secret key.\r\n   */\r\n  constructor(private readonly authService: SecureAuthService, config: ConfigService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: config.get('JWT_SECRET'),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validates the payload of a JWT token by calling the `validateTokenPayload` method of the `SecureAuthService`.\r\n   *\r\n   * @async\r\n   * @param {any} payload - The decoded payload of the JWT token.\r\n   * @returns {Promise} - The user associated with the payload if valid.\r\n   */\r\n  async validate(payload: any): Promise {\r\n    return this.authService.validateTokenPayload(payload);\r\n  }\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/mailer/mail.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable service responsible for sending emails using the MailerService.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(mailerService: MailerService)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of the MailService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                mailerService\n                                                                    :     MailerService\n            \n                                                            \n                                                            \n                                                                \n            The MailerService used to send emails.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     sendEmail\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    sendEmail(to: string, subject: string, template: string, context: object)\n                                \n                            \n            \n                            \n                                \n                                        Asynchronously sends an email to the specified recipient using the configured MailerService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                to\n                                                            \n                                                            \n                                                                \n            The recipient's email address.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                subject\n                                                            \n                                                            \n                                                                \n            The subject of the email.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                template\n                                                            \n                                                            \n                                                                \n            The name of the email template to be used.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                context\n                                                            \n                                                            \n                                                                \n            Optional data object to be used as the context for the email template.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A Promise that resolves when the email is sent.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { MailerService } from '@nestjs-modules/mailer';\r\n\r\n/**\r\n * Injectable service responsible for sending emails using the MailerService.\r\n *\r\n * @class\r\n * @name MailService\r\n */\r\n@Injectable()\r\nexport class MailService {\r\n  /**\r\n   * Creates an instance of the MailService.\r\n   *\r\n   * @constructor\r\n   * @param {MailerService} mailerService - The MailerService used to send emails.\r\n   */\r\n  constructor(private readonly mailerService: MailerService) {}\r\n\r\n  /**\r\n   * Asynchronously sends an email to the specified recipient using the configured MailerService.\r\n   *\r\n   * @async\r\n   * @function\r\n   * @param {string} to - The recipient's email address.\r\n   * @param {string} subject - The subject of the email.\r\n   * @param {string} template - The name of the email template to be used.\r\n   * @param {object} [context] - Optional data object to be used as the context for the email template.\r\n   * @returns {Promise} A Promise that resolves when the email is sent.\r\n   */\r\n  async sendEmail(to: string, subject: string, template: string, context?: object): Promise {\r\n    await this.mailerService.sendMail({\r\n      to,\r\n      subject,\r\n      template,\r\n      context,\r\n    });\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OAuthStrategy.html":{"url":"injectables/OAuthStrategy.html","title":"injectable - OAuthStrategy","body":"\n                   \n\n\n\n\n\n  Injectables\n  OAuthStrategy\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/oauth.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Passport OAuth strategy for handling OAuth-based authentication.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(authService: SecureAuthService)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of OAuthStrategy.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authService\n                                                                    :     SecureAuthService\n            \n                                                            \n                                                            \n                                                                \n            The instance of the SecureAuthService used for handling OAuth authentication.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     validate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validate(accessToken: string, refreshToken: string, profile: any)\n                                \n                            \n            \n                            \n                                \n                                        Validates the user obtained from the OAuth provider by calling the findOrCreateUserFromOAuthProfile methodof the SecureAuthService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                accessToken\n                                                            \n                                                            \n                                                                \n            The access token obtained from the OAuth provider.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                refreshToken\n                                                            \n                                                            \n                                                                \n            The refresh token obtained from the OAuth provider.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                profile\n                                                                    :     Profile\n            \n                                                            \n                                                            \n                                                                \n            The user profile received from the OAuth provider.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The user associated with the OAuth profile.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Strategy, Profile } from 'passport-oauth2';\r\nimport { SecureAuthService } from '../services/auth.service';\r\nimport { User } from '@prisma/client';\r\n\r\n/**\r\n * Passport OAuth strategy for handling OAuth-based authentication.\r\n *\r\n * @class\r\n * @extends PassportStrategy(Strategy, 'oauth')\r\n */\r\n@Injectable()\r\nexport class OAuthStrategy extends PassportStrategy(Strategy, 'oauth') {\r\n  /**\r\n   * Creates an instance of OAuthStrategy.\r\n   *\r\n   * @constructor\r\n   * @param {SecureAuthService} authService - The instance of the SecureAuthService used for handling OAuth authentication.\r\n   */\r\n  constructor(private readonly authService: SecureAuthService) {\r\n    super({\r\n      authorizationURL: 'https://oauth-provider.com/auth',\r\n      tokenURL: 'https://oauth-provider.com/token',\r\n      clientID: 'your-client-id',\r\n      clientSecret: 'your-client-secret',\r\n      callbackURL: 'http://your-app.com/auth/callback',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validates the user obtained from the OAuth provider by calling the `findOrCreateUserFromOAuthProfile` method\r\n   * of the `SecureAuthService`.\r\n   *\r\n   * @async\r\n   * @param {string} accessToken - The access token obtained from the OAuth provider.\r\n   * @param {string} refreshToken - The refresh token obtained from the OAuth provider.\r\n   * @param {Profile} profile - The user profile received from the OAuth provider.\r\n   * @returns {Promise} - The user associated with the OAuth profile.\r\n   */\r\n  async validate(accessToken: string, refreshToken: string, profile: Profile): Promise {\r\n    return this.authService.findOrCreateUserFromOAuthProfile(profile);\r\n  }\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/prismaService/prisma.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable service that extends PrismaClient and provides access to the Prisma ORM.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: any)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of the PrismaService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                \n            Optional configuration options for PrismaClient.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     onModuleInit\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    onModuleInit()\n                                \n                            \n            \n                            \n                                \n                                        Lifecycle hook that runs on application startup.Connects the PrismaClient to the database.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     onModuleDestroy\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    onModuleDestroy()\n                                \n                            \n            \n                            \n                                \n                                        Lifecycle hook that runs on application shutdown.Disconnects the PrismaClient from the database.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\r\nimport { PrismaClient, Prisma } from '@prisma/client';\r\n\r\n/**\r\n * Injectable service that extends PrismaClient and provides access to the Prisma ORM.\r\n *\r\n * @class\r\n * @name PrismaService\r\n * @extends {PrismaClient}\r\n * @implements {OnModuleInit, OnModuleDestroy}\r\n */\r\n@Injectable()\r\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\r\n  /**\r\n   * Creates an instance of the PrismaService.\r\n   *\r\n   * @constructor\r\n   * @param {Prisma.PrismaClientOptions} options - Optional configuration options for PrismaClient.\r\n   */\r\n  constructor(options?: Prisma.PrismaClientOptions) {\r\n    super(options);\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that runs on application startup.\r\n   * Connects the PrismaClient to the database.\r\n   *\r\n   * @async\r\n   * @function\r\n   * @name onModuleInit\r\n   * @returns {Promise}\r\n   */\r\n  async onModuleInit() {\r\n    await this.$connect();\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that runs on application shutdown.\r\n   * Disconnects the PrismaClient from the database.\r\n   *\r\n   * @async\r\n   * @function\r\n   * @name onModuleDestroy\r\n   * @returns {Promise}\r\n   */\r\n  async onModuleDestroy() {\r\n    await this.$disconnect();\r\n  }\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RbacAuthGuard.html":{"url":"injectables/RbacAuthGuard.html","title":"injectable - RbacAuthGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  RbacAuthGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/guard/rbac.guard.ts\n        \n\n            \n                Description\n            \n            \n                Custom RBAC (Role-Based Access Control) AuthGuard that extends the JwtAuthGuard.This guard checks if the authenticated user has the required roles and permissions to access a specific route.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(rbacService: SecureRbacService, reflector: Reflector)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of RbacAuthGuard.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rbacService\n                                                                    :     SecureRbacService\n            \n                                                            \n                                                            \n                                                                \n            The RBAC service to check user roles and permissions.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                reflector\n                                                                    :     Reflector\n            \n                                                            \n                                                            \n                                                                \n            The NestJS reflector used to get metadata from the route handlers.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     canActivate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    canActivate(context: ExecutionContext)\n                                \n                            \n            \n                            \n                                \n                                        Method that checks if the authenticated user has the required roles and permissions to access a specific route.Overrides the canActivate method of the parent class.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                context\n                                                                    :     ExecutionContext\n            \n                                                            \n                                                            \n                                                                \n            The execution context containing the request and response objects.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A boolean indicating whether the user is authorized to access the route or not.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { User } from '@prisma/client';\r\nimport { SecureRbacService } from '../service/rbac.service';\r\n\r\n/**\r\n * Custom RBAC (Role-Based Access Control) AuthGuard that extends the JwtAuthGuard.\r\n * This guard checks if the authenticated user has the required roles and permissions to access a specific route.\r\n *\r\n * @class\r\n */\r\n@Injectable()\r\nexport class RbacAuthGuard extends AuthGuard('jwt') {\r\n  /**\r\n   * Creates an instance of RbacAuthGuard.\r\n   *\r\n   * @constructor\r\n   * @param {SecureRbacService} rbacService - The RBAC service to check user roles and permissions.\r\n   * @param {Reflector} reflector - The NestJS reflector used to get metadata from the route handlers.\r\n   */\r\n  constructor(private readonly rbacService: SecureRbacService, private readonly reflector: Reflector) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Method that checks if the authenticated user has the required roles and permissions to access a specific route.\r\n   * Overrides the `canActivate` method of the parent class.\r\n   *\r\n   * @async\r\n   * @method\r\n   * @param {ExecutionContext} context - The execution context containing the request and response objects.\r\n   * @returns {Promise} A boolean indicating whether the user is authorized to access the route or not.\r\n   * @throws {UnauthorizedException} If the user does not have the required roles or permissions.\r\n   */\r\n  async canActivate(context: ExecutionContext): Promise {\r\n    // Run the JWT authentication using the AuthGuard\r\n    const canActivate = await super.canActivate(context);\r\n    if (!canActivate) {\r\n      return false;\r\n    }\r\n\r\n    // Get the user object from the request\r\n    const request = context.switchToHttp().getRequest();\r\n    const user: User = request.user;\r\n\r\n    // Get the required roles and permissions from the route metadata\r\n    const requiredRoles = this.reflector.get('roles', context.getHandler()) || [];\r\n    const requiredPermissions = this.reflector.get('permissions', context.getHandler()) || [];\r\n\r\n    // Check if the user has the required roles\r\n    const hasRoles = await this.rbacService.hasRoles(user.id, requiredRoles);\r\n\r\n    // Check if the user has the required permissions\r\n    const hasPermissions = await this.rbacService.hasPermission(user.id, requiredPermissions);\r\n    \r\n    if (!hasRoles || !hasPermissions) {\r\n      throw new UnauthorizedException('You do not have permission to access this resource.');\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecureAuthService.html":{"url":"injectables/SecureAuthService.html","title":"injectable - SecureAuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SecureAuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable service that provides authentication-related functionalities, such as login, signup,password reset, and token validation.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(prisma: PrismaService, configService: any, jwtService: JwtService, mailService: MailService)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of the SecureAuthService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                prisma\n                                                                    :     PrismaService\n            \n                                                            \n                                                            \n                                                                \n            Instance of the PrismaService to interact with the database.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                configService\n                                                                    :     ConfigService\n            \n                                                            \n                                                            \n                                                                \n            Instance of the ConfigService to access the authentication configuration.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                jwtService\n                                                                    :     JwtService\n            \n                                                            \n                                                            \n                                                                \n            Instance of the JwtService to sign and verify JWT tokens.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                mailService\n                                                                    :     MailService\n            \n                                                            \n                                                            \n                                                                \n            Instance of the MailService to send emails.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Private createTransporter\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createTransporter()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateTokenPayload\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateTokenPayload(payload: TokenPayload)\n                                \n                            \n            \n                            \n                                \n                                        Validates the payload of a JWT token and retrieves the associated user from the database.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                payload\n                                                                    :     TokenPayload\n            \n                                                            \n                                                            \n                                                                \n            The decoded payload of the JWT token.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The user associated with the payload if valid.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     findOrCreateUserFromOAuthProfile\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findOrCreateUserFromOAuthProfile(profile: OAuthProfile)\n                                \n                            \n            \n                            \n                                \n                                        Finds or creates a user based on the provided OAuth profile.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                profile\n                                                                    :     OAuthProfile\n            \n                                                            \n                                                            \n                                                                \n            The OAuth profile of the user.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The existing or newly created user.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     login\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    login(email: string, password: string)\n                                \n                            \n            \n                            \n                                \n                                        Authenticates a user based on their email and password and returns an access token upon successful authentication.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                \n            The email of the user.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                password\n                                                            \n                                                            \n                                                                \n            The password of the user.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            An object containing the access token.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     signup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    signup(email: string, password: string)\n                                \n                            \n            \n                            \n                                \n                                        Registers a new user with the provided email and password.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                \n            The email of the new user.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                password\n                                                            \n                                                            \n                                                                \n            The password of the new user.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The newly created user.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resetPassword\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    resetPassword(userId: number, oldPassword: string, newPassword: string)\n                                \n                            \n            \n                            \n                                \n                                        Resets the password of a user based on the provided email and a new password.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                oldPassword\n                                                            \n                                                            \n                                                                \n            The email of the user.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                newPassword\n                                                            \n                                                            \n                                                                \n            The new password for the user.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The updated user object.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     forgotPassword\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    forgotPassword(email: string)\n                                \n                            \n            \n                            \n                                \n                                        Initiates the \"Forgot Password\" flow for a user based on the provided email.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                \n            The email of the user.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            A promise that resolves once the reset password email is sent.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     storeResetToken\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    storeResetToken(email: string, resetToken: string, expiration: number)\n                                \n                            \n            \n                            \n                                \n                                        Stores the reset token and its expiration time in the user's database record.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                \n            The email of the user.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                resetToken\n                                                            \n                                                            \n                                                                \n            The reset token to store.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                expiration\n                                                            \n                                                            \n                                                                \n            The expiration time of the reset token.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            A promise that resolves once the token is stored.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public generateRandomString\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    generateRandomString(length: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendResetPasswordEmail\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    sendResetPasswordEmail(email: string, resetUrl: string)\n                                \n                            \n            \n                            \n                                \n                                        Sends a reset password email to the user with a reset URL.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                \n            The email of the user.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                resetUrl\n                                                            \n                                                            \n                                                                \n            The URL where the user can reset their password.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            A promise that resolves once the email is sent.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public isPasswordStrong\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    isPasswordStrong(password: string)\n                                \n                            \n            \n                            \n                                \n                                        Checks if a password meets the required strength criteria.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                password\n                                                            \n                                                            \n                                                                \n            The password to check.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                \n            true if the password is strong; otherwise, false.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private emailTransporterConfig\n                                \n                            \n                            \n                                \n                                    emailTransporterConfig:     { host: string; port: number; secure: boolean; auth: { user: string; pass: string; }; sender: str...\n            \n                                \n                            \n                            \n                                \n                                    Configuration object for the email transporter used for sending emails.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private forgotPasswordConfig\n                                \n                            \n                            \n                                \n                                    forgotPasswordConfig:     { resetPasswordUrl: string; resetPasswordExpiration: number; }\n            \n                                \n                            \n                            \n                                \n                                    Configuration object for the \"Forgot Password\" functionality.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private transporter\n                                \n                            \n                            \n                                \n                                    transporter:     any\n            \n                                \n                            \n                            \n                                \n                                    Nodemailer transporter used to send emails.\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable, UnauthorizedException, HttpException, NotFoundException } from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { AuthConfigure, TokenPayload } from '../interfaces/auth.interface';\r\nimport { OAuthProfile } from '../interfaces/user.interface';\r\nimport { User } from '@prisma/client';\r\nimport { PrismaService } from '../prismaService/prisma.service';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport {MailService} from '../mailer/mail.service';\r\nimport * as nodemailer from 'nodemailer';\r\n\r\n/**\r\n * Injectable service that provides authentication-related functionalities, such as login, signup,\r\n * password reset, and token validation.\r\n *\r\n * @class\r\n * @name SecureAuthService\r\n */\r\n@Injectable()\r\nexport class SecureAuthService {\r\n   /**\r\n   * Configuration object for the \"Forgot Password\" functionality.\r\n   * @private\r\n   */\r\n  private readonly forgotPasswordConfig: AuthConfigure['forgotPassword'];\r\n\r\n  /**\r\n   * Configuration object for the email transporter used for sending emails.\r\n   * @private\r\n   */\r\n  private readonly emailTransporterConfig: AuthConfigure['emailTransporter'];\r\n\r\n  /**\r\n   * Nodemailer transporter used to send emails.\r\n   * @private\r\n   */\r\n  private transporter: nodemailer.Transporter;\r\n\r\n  /**\r\n   * Creates an instance of the SecureAuthService.\r\n   *\r\n   * @constructor\r\n   * @param {PrismaService} prisma - Instance of the PrismaService to interact with the database.\r\n   * @param {ConfigService} configService - Instance of the ConfigService to access the authentication configuration.\r\n   * @param {JwtService} jwtService - Instance of the JwtService to sign and verify JWT tokens.\r\n   * @param {MailService} mailService - Instance of the MailService to send emails.\r\n   */\r\n  constructor( \r\n    private prisma: PrismaService, \r\n    private readonly configService: ConfigService, \r\n    private readonly jwtService: JwtService,\r\n    private readonly mailService: MailService,\r\n    ) {\r\n    this.forgotPasswordConfig = this.configService.get('forgotPassword');\r\n    this.emailTransporterConfig = this.configService.get('emailTransporter');\r\n    this.transporter = this.createTransporter();\r\n  }\r\n\r\n  private createTransporter(): nodemailer.Transporter {\r\n    const { host, port, secure, auth } = this.emailTransporterConfig;\r\n\r\n    return nodemailer.createTransport({\r\n      host: host,\r\n      port: port,\r\n      secure: secure,\r\n      auth: auth,\r\n      tls: {\r\n        // Here you can specify advanced TLS options if needed\r\n        ciphers: 'SSLv3', // Specify the TLS cipher to use (example: 'SSLv3' or 'TLSv1')\r\n        rejectUnauthorized: false, // Set to false to allow self-signed or invalid certificates\r\n        // Other TLS options if required\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n * Validates the payload of a JWT token and retrieves the associated user from the database.\r\n *\r\n * @async\r\n * @param {TokenPayload} payload - The decoded payload of the JWT token.\r\n * @returns {Promise} - The user associated with the payload if valid.\r\n * @throws {UnauthorizedException} - If the token is invalid or the user is not found.\r\n */\r\n\r\n  async validateTokenPayload(payload: TokenPayload): Promise {\r\n    \r\n    const user = await this.prisma.user.findUnique({where: {id: payload.sub}});\r\n    if (!user) {\r\n      throw new UnauthorizedException('Invalid token');\r\n    }\r\n\r\n    return user;\r\n  }\r\n\r\n/**\r\n * Finds or creates a user based on the provided OAuth profile.\r\n *\r\n * @async\r\n * @param {OAuthProfile} profile - The OAuth profile of the user.\r\n * @returns {Promise} - The existing or newly created user.\r\n * @throws {NotFoundException} - If the user is not found based on the OAuth profile.\r\n */\r\n  // Change the type of the argument to `OAuthProfile`\r\nasync findOrCreateUserFromOAuthProfile(profile: OAuthProfile): Promise {\r\n  const existingUser = await this.prisma.user.findUnique({\r\n    where: { id: profile.id }, // Assuming `id` is the primary key of the `User` model\r\n  });\r\n\r\n  if (!existingUser) {\r\n    throw new NotFoundException('User not found');\r\n  }\r\n\r\n  return existingUser;\r\n}\r\n\r\n/**\r\n * Authenticates a user based on their email and password and returns an access token upon successful authentication.\r\n *\r\n * @async\r\n * @param {string} email - The email of the user.\r\n * @param {string} password - The password of the user.\r\n * @returns {Promise} - An object containing the access token.\r\n * @throws {UnauthorizedException} - If the email or password is invalid.\r\n */\r\n  async login( email: string, password: string): Promise {\r\n    const user = await this.prisma.user.findFirst({ where: { email: email, deletedAt: null } });\r\n  \r\n    if (!user) {\r\n      throw new UnauthorizedException('Invalid email or password');\r\n    }\r\n  \r\n    const isPasswordValid = await bcrypt.compare(password, user.password);\r\n    if (!isPasswordValid) {\r\n      throw new UnauthorizedException('Invalid email or password');\r\n    }\r\n    // console.log(this.configService.get('jwt').secret)\r\n    const payload = { email: user.email, sub: user.id };\r\n    const access_token = this.jwtService.sign(payload, {secret: this.configService.get('jwt').secret});\r\n  \r\n    return { access_token};\r\n  }\r\n  \r\n  /**\r\n * Registers a new user with the provided email and password.\r\n *\r\n * @async\r\n * @param {string} email - The email of the new user.\r\n * @param {string} password - The password of the new user.\r\n * @returns {Promise} - The newly created user.\r\n * @throws {UnauthorizedException} - If the email is already associated with an existing user.\r\n */\r\n  async signup(email: string, password: string): Promise {\r\n    const existingUser = await this.prisma.user.findFirst({ where: { email, deletedAt: null } });\r\n\r\n    if (existingUser) {\r\n      throw new UnauthorizedException('Username already exists');\r\n    }\r\n\r\n    const saltRounds = 10; \r\n    const hashedPassword = await bcrypt.hash(password, saltRounds);\r\n    const newUser = await this.prisma.user.create({\r\n      data: {\r\n        email: email,\r\n        password: hashedPassword,\r\n      }\r\n    });\r\n\r\n    return newUser;\r\n  }\r\n\r\n  /**\r\n * Resets the password of a user based on the provided email and a new password.\r\n *\r\n * @async\r\n * @param {string} oldPassword - The email of the user.\r\n * @param {string} newPassword - The new password for the user.\r\n * @returns {Promise} - The updated user object.\r\n * @throws {UnauthorizedException} - If the user is not found.\r\n */\r\n  async resetPassword(userId: number, oldPassword: string, newPassword: string): Promise {\r\n    const user = await this.prisma.user.findFirst({ where: { id: userId, deletedAt: null } });\r\n    \r\n    \r\n    if (!user) {\r\n      throw new UnauthorizedException('User not found');\r\n    }\r\n    const verifyPassword = await bcrypt.compare(oldPassword, user.password);\r\n    \r\n    if(!verifyPassword) {\r\n      throw new UnauthorizedException('Invalid password');\r\n    }\r\n\r\n    const saltRounds = 10; \r\n    const hashedPassword = await bcrypt.hash(newPassword, saltRounds);\r\n\r\n    const updatedUser = await this.prisma.user.update({\r\n      where: { id: user.id },\r\n      data: { password: hashedPassword},\r\n    });\r\n\r\n    return updatedUser;\r\n  }\r\n\r\n/**\r\n * Initiates the \"Forgot Password\" flow for a user based on the provided email.\r\n *\r\n * @async\r\n * @param {string} email - The email of the user.\r\n * @returns {Promise} - A promise that resolves once the reset password email is sent.\r\n * @throws {HttpException} - If an error occurs while sending the reset password email.\r\n */\r\n  async forgotPassword(email: string): Promise {\r\n    // Generate a unique reset token\r\n    const resetToken = this.generateRandomString(32);\r\n\r\n    // Store the reset token in your database or temporary storage with an expiration time\r\n    const resetTokenExpiration = Date.now() + this.forgotPasswordConfig.resetPasswordExpiration;\r\n    await this.storeResetToken(email, resetToken, resetTokenExpiration);\r\n\r\n    // Compose the reset URL with the reset token and expiration time\r\n    const resetUrl = `${this.forgotPasswordConfig.resetPasswordUrl}?token=${resetToken}`;\r\n\r\n    // Send the password reset email to the user with the reset URL\r\n    await this.sendResetPasswordEmail(email, resetUrl)\r\n    .catch(error => {throw new HttpException(error.message, 500)});\r\n  }\r\n\r\n  /**\r\n * Stores the reset token and its expiration time in the user's database record.\r\n *\r\n * @async\r\n * @param {string} email - The email of the user.\r\n * @param {string} resetToken - The reset token to store.\r\n * @param {number} expiration - The expiration time of the reset token.\r\n * @returns {Promise} - A promise that resolves once the token is stored.\r\n */\r\n  async storeResetToken(email: string, resetToken: string, expiration: number): Promise {\r\n    await this.prisma.user.update({\r\n      where: { email: email },\r\n      data: { resetToken, resetTokenExpiration: new Date(expiration) },\r\n    });\r\n  }\r\n\r\n  public generateRandomString(length: number): string {\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let result = '';\r\n    for (let i = 0; i } - A promise that resolves once the email is sent.\r\n * @throws {HttpException} - If an error occurs while sending the email.\r\n */\r\n  async sendResetPasswordEmail(email: string, resetUrl: string): Promise {\r\n    const { sender } = this.emailTransporterConfig;\r\n    const subject = 'Password Reset';\r\n    const body = `Click on the following link to reset your password: ${resetUrl}`;\r\n    const temp: string = '../templates/reset';\r\n\r\n    // Use the configured transporter to send the email\r\n    const context = {\r\n      url: resetUrl,\r\n    };\r\n\r\n    await this.mailService.sendEmail(email, subject, temp, context);\r\n  }\r\n\r\n\r\n  /**\r\n * Checks if a password meets the required strength criteria.\r\n *\r\n * @param {string} password - The password to check.\r\n * @returns {boolean} - `true` if the password is strong; otherwise, `false`.\r\n */\r\n  public isPasswordStrong(password: string): boolean {\r\n    // Password strength requirements\r\n    const hasUppercase = /[A-Z]/.test(password);\r\n    const hasLowercase = /[a-z]/.test(password);\r\n    const hasNumber = /\\d/.test(password);\r\n    const hasSpecialCharacter = /[!@#$%^&*()_+{}\\[\\]:;<>,.?~`]/.test(password);\r\n    const isLengthValid = password.length >= 8;\r\n\r\n    return hasUppercase && hasLowercase && hasNumber && hasSpecialCharacter && isLengthValid;\r\n  }\r\n\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecureRbacService.html":{"url":"injectables/SecureRbacService.html","title":"injectable - SecureRbacService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SecureRbacService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/service/rbac.service.ts\n        \n\n            \n                Description\n            \n            \n                Service class responsible for handling Role-Based Access Control (RBAC) operations.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(prisma: PrismaService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getPermissions\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getPermissions()\n                                \n                            \n            \n                            \n                                \n                                        Retrieves a list of all permissions.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to an array of Permission objects.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createPermission\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createPermission(permissionDto: PermissionDto)\n                                \n                            \n            \n                            \n                                \n                                        Creates a new permission.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                permissionDto\n                                                                    :     PermissionDto\n            \n                                                            \n                                                            \n                                                                \n            The data for creating the new permission.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to the created Permission object.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPermissionById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getPermissionById(id: number)\n                                \n                            \n            \n                            \n                                \n                                        Retrieves a permission by its ID.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            The ID of the permission to retrieve.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to the Permission object with the given ID.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updatePermission\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updatePermission(id: number, updatePermissionDto: PermissionDto)\n                                \n                            \n            \n                            \n                                \n                                        Updates a permission by its ID.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            The ID of the permission to update.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                updatePermissionDto\n                                                                    :     UpdatePermissionDto\n            \n                                                            \n                                                            \n                                                                \n            The data for updating the permission.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to the updated Permission object.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRoles\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getRoles()\n                                \n                            \n            \n                            \n                                \n                                        ROLES SERVICESRetrieves a list of all roles.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRoleById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getRoleById(roleId: number)\n                                \n                            \n            \n                            \n                                \n                                        Retrieves a role by its ID.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                roleId\n                                                            \n                                                            \n                                                                \n            The ID of the role to retrieve.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to the Role object with the given ID.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createRole\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createRole(roleDto: RoleDto)\n                                \n                            \n            \n                            \n                                \n                                        Creates a new role.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                roleDto\n                                                                    :     RoleDto\n            \n                                                            \n                                                            \n                                                                \n            The data for creating the new role.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to the created Role object.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateRole\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateRole(roleId: number, updateRoleDto: RoleDto)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     asignPermissionToRole\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    asignPermissionToRole(assignPermissionToRoleDto: AssignPermissionToRoleDto)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removePermissionFromRole\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    removePermissionFromRole(removePermissionFromRoleDto: AssignPermissionToRoleDto)\n                                \n                            \n            \n                            \n                                \n                                        Removes permissions from a role based on the provided DTO.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                removePermissionFromRoleDto\n                                                                    :     RemovePermissionFromRoleDto\n            \n                                                            \n                                                            \n                                                                \n            The DTO containing roleId and permissionIds.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updatePermissionsToRoles\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updatePermissionsToRoles(updatePermissionToRoleDto: AssignPermissionToRoleDto)\n                                \n                            \n            \n                            \n                                \n                                        Updates a role by its ID.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                updatePermissionToRoleDto\n                                                                    :     UpdatePermissionToRoleDto\n            \n                                                            \n                                                            \n                                                                \n            The data for updating the role.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                * \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRole\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteRole(roleId: number)\n                                \n                            \n            \n                            \n                                \n                                        Deletes a role by its ID.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                roleId\n                                                            \n                                                            \n                                                                \n            The ID of the role to delete.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the role is deleted successfully.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     undeleteRole\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    undeleteRole(roleId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     assignRoleToUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    assignRoleToUser(assignRoleToUser: AssignRoleToUserDto)\n                                \n                            \n            \n                            \n                                \n                                        Assigns a role to a user.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                assignRoleToUser\n                                                                    :     AssignRoleToUserDto\n            \n                                                            \n                                                            \n                                                                \n            The data for assigning the role to the user.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the role is assigned to the user successfully.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     revokeRoleOfUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    revokeRoleOfUser(revokeRoleOfUserDto: AssignRoleToUserDto)\n                                \n                            \n            \n                            \n                                \n                                        Disconnects a role from a user based on the provided DTO.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                revokeRoleOfUserDto\n                                                                    :     RevokeRoleOfUserDto\n            \n                                                            \n                                                            \n                                                                \n            The DTO containing userId and roleId.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPermissionsForUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getPermissionsForUser(userId: number)\n                                \n                            \n            \n                            \n                                \n                                        Retrieves a list of permissions assigned to a user.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                userId\n                                                            \n                                                            \n                                                                \n            The ID of the user.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to an array of Permission objects.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasRoles\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    hasRoles(userId: any, requiredRoles: string[])\n                                \n                            \n            \n                            \n                                \n                                        Checks if a user has specific roles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                userId\n                                                            \n                                                            \n                                                                \n            The ID of the user.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                requiredRoles\n                                                            \n                                                            \n                                                                \n            An array of role names required for access.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to true if the user has all the required roles; otherwise, false.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasPermission\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    hasPermission(userId: number, requiredPermissions: string[])\n                                \n                            \n            \n                            \n                                \n                                        Checks if a user has specific permissions.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                userId\n                                                            \n                                                            \n                                                                \n            The ID of the user.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                requiredPermissions\n                                                            \n                                                            \n                                                                \n            An array of permission names required for access.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves to true if the user has all the required permissions; otherwise, false.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { HttpException, Injectable, NotFoundException } from '@nestjs/common';\nimport { Role, Permission} from '@prisma/client';\nimport { PrismaService } from '../../auth/prismaService/prisma.service';\nimport { RoleDto,  AssignRoleToUserDto, PermissionDto, AssignPermissionToRoleDto} from '../dto/permission-role.dto';\n\n\n/**\n * Service class responsible for handling Role-Based Access Control (RBAC) operations.\n *\n * @class\n */\n@Injectable()\nexport class SecureRbacService {\n  constructor(private readonly prisma: PrismaService) {}\n\n /**\n   * Retrieves a list of all permissions.\n   *\n   * @returns {Promise} A promise that resolves to an array of Permission objects.\n   */\n  async getPermissions(): Promise {\n    return this.prisma.permission.findMany({ where: { deletedAt: null } });\n  }\n\n  /**\n   * Creates a new permission.\n   *\n   * @param {PermissionDto} permissionDto - The data for creating the new permission.\n   * @returns {Promise} A promise that resolves to the created Permission object.\n   * @throws {HttpException} If the permission with the same name already exists.\n   */\n  async createPermission(\n    permissionDto: PermissionDto,\n  ): Promise {\n    const { name } = permissionDto;\n    const permission = await this.prisma.permission.findFirst({\n      where: { name, deletedAt: null },\n    });\n    if (permission) throw new HttpException('Permission already exists', 400);\n\n    return this.prisma.permission.create({ data: { name } });\n  }\n\n  /**\n   * Retrieves a permission by its ID.\n   *\n   * @param {number} id - The ID of the permission to retrieve.\n   * @returns {Promise} A promise that resolves to the Permission object with the given ID.\n   * @throws {NotFoundException} If the permission with the specified ID is not found.\n   */\n  async getPermissionById(id: number): Promise {\n    const permission = await this.prisma.permission.findFirst({\n      where: { id, deletedAt: null },\n    });\n    if (!permission) throw new NotFoundException(`Permission ${id} not found`);\n    return permission;\n  }\n\n  /**\n   * Updates a permission by its ID.\n   *\n   * @param {number} id - The ID of the permission to update.\n   * @param {UpdatePermissionDto} updatePermissionDto - The data for updating the permission.\n   * @returns {Promise} A promise that resolves to the updated Permission object.\n   * @throws {NotFoundException} If the permission with the specified ID is not found.\n   */\n  async updatePermission(\n    id: number,\n    updatePermissionDto: PermissionDto,\n  ): Promise {\n    const permission = await this.prisma.permission.findFirst({\n      where: { id, deletedAt: null },\n    });\n    if (!permission) throw new NotFoundException(`Permission ${id} not found`);\n\n    return this.prisma.permission.update({\n      where: { id, deletedAt: null },\n      data: updatePermissionDto,\n    });\n  }\n\n  /**\n   * ROLES SERVICES\n   * @returns\n   */\n\n\n   /**\n   * Retrieves a list of all roles.\n   *\n   * @returns {Promise} A promise that resolves to an array of Role objects.\n   */\n  async getRoles(): Promise {\n    return this.prisma.role.findMany({ where: { deletedAt: null } });\n  }\n\n  /**\n   * Retrieves a role by its ID.\n   *\n   * @param {number} roleId - The ID of the role to retrieve.\n   * @returns {Promise} A promise that resolves to the Role object with the given ID.\n   * @throws {NotFoundException} If the role with the specified ID is not found.\n   */\n  async getRoleById(roleId: number): Promise {\n    const role = await this.prisma.role.findFirst({\n      where: { id: roleId, deletedAt: null },\n    });\n\n    if (!role) throw new NotFoundException(`Role ${roleId} not found`);\n\n    return role;\n  }\n\n  /**\n   * Creates a new role.\n   *\n   * @param {RoleDto} roleDto - The data for creating the new role.\n   * @returns {Promise} A promise that resolves to the created Role object.\n   * @throws {HttpException} If the role with the same name already exists.\n   */\n  async createRole(roleDto: RoleDto): Promise {\n    const { name } = roleDto;\n    const role = await this.prisma.role.findFirst({\n      where: { name },\n      include: {permissions: true}\n    });\n\n      if(role && role.deletedAt === null) throw new HttpException(`Role ${name} already exists`, 400);\n      if(role.deletedAt !== null) throw new HttpException(`Role ${name} exist already, change it deletedAt to null`, 400)\n\n      return await this.prisma.role.create({ data: { name } });\n\n  }\n\n\n  async updateRole(roleId: number, updateRoleDto: RoleDto): Promise {\n    const { name } = updateRoleDto;\n    const role = await this.prisma.role.findFirst({\n      where: { name, deletedAt: null },\n      include: {permissions: true}\n    });\n\n      if(!role) throw new NotFoundException(`Role ${name} does not exists`);\n      if(role.name === name) throw new HttpException(`Role ${name} can not be same as old name`, 400)\n\n      return await this.prisma.role.update({where: {id: roleId, deletedAt: null}, data: { name } });\n\n  }\n\n  async asignPermissionToRole(assignPermissionToRoleDto: AssignPermissionToRoleDto): Promise {\n    const {roleId, permissionIds} = assignPermissionToRoleDto\n\n    const role = await this.prisma.role.findFirst({\n      where: { id: roleId, deletedAt: null },\n      include: {permissions: true}\n    });\n\n    if(!role) throw new NotFoundException(`Role ${roleId} does not exists`);\n\n    for(let permissionId of permissionIds) {\n      const permission = await this.prisma.permission.findFirst({where: {id: permissionId, deletedAt: null}});\n        \n      if (!permission) throw new NotFoundException(`Permission ${permissionId} not found`);\n\n      const permissionInRole = role.permissions.find((p) => p.id === permissionId);\n\n      if (!permissionInRole) {\n        throw new HttpException(`Permission ${permissionId} not associated with Role ${role.name}`, 400);\n      }\n    } \n\n     permissionIds.forEach( async (permissionId) => {\n       await this.prisma.role.update({\n        where: {id: roleId, deletedAt: null},\n        data: {\n          permissions: {\n            connect: {\n              id: permissionId,\n            },\n          },\n        },\n      });\n    });     \n  }\n\n\n\n  /**\n * Removes permissions from a role based on the provided DTO.\n * @async\n * @param {RemovePermissionFromRoleDto} removePermissionFromRoleDto - The DTO containing roleId and permissionIds.\n * @throws {NotFoundException} If the role or permission is not found.\n * @throws {HttpException} If a permission is not associated with the role.\n */\nasync removePermissionFromRole(removePermissionFromRoleDto: AssignPermissionToRoleDto): Promise {\n  const { roleId, permissionIds } = removePermissionFromRoleDto;\n\n  const role = await this.prisma.role.findFirst({\n    where: { id: roleId, deletedAt: null },\n    include: { permissions: true },\n  });\n\n  if (!role) throw new NotFoundException(`Role ${roleId} does not exist`);\n\n  for (const permissionId of permissionIds) {\n    const permission = await this.prisma.permission.findFirst({\n      where: { id: permissionId, deletedAt: null },\n    });\n\n    if (!permission) throw new NotFoundException(`Permission ${permissionId} not found`);\n\n    const permissionInRole = role.permissions.find((p) => p.id === permissionId);\n\n    if (!permissionInRole) {\n      throw new HttpException(`Permission ${permissionId} not associated with Role ${role.name}`, 400);\n    }\n  }\n\n  const permissionDisconnects = permissionIds.map((permissionId) => ({ id: permissionId }));\n\n  await this.prisma.role.update({\n    where: { id: roleId, deletedAt: null },\n    data: {\n      permissions: {\n        disconnect: permissionDisconnects,\n      },\n    },\n  });\n}\n\n\n  /**\n   * Updates a role by its ID.\n   *\n   * @param {UpdatePermissionToRoleDto} updatePermissionToRoleDto - The data for updating the role.\n   * @returns {Promise} \n   * @throws {NotFoundException} If the role with the specified ID is not found.\n   */\n  async updatePermissionsToRoles(\n    updatePermissionToRoleDto: AssignPermissionToRoleDto,\n  ): Promise {\n    const { roleId, permissionIds } = updatePermissionToRoleDto;\n\n    if (permissionIds.length === 0 || !roleId) throw new HttpException('Invalid role ID or permissions', 400);\n\n      const role = await this.prisma.role.findFirst({\n        where: { id: roleId, deletedAt: null },\n        select: { permissions: true },\n      });\n      if (!role) throw new NotFoundException('Role does not exist');\n\n      let permission: Permission; \n      \n\n      for(let permissionId of permissionIds) {\n        permission = await this.prisma.permission.findFirst({\n          where: { id: permissionId, deletedAt: null },\n        });\n        if (!permission) throw new NotFoundException('Permission does not exist');\n      }\n\n      for (const permission of role.permissions) {\n        if (permissionIds.includes(permission.id))\n          throw new HttpException('Permission already exists', 400);\n      }\n\n\n      permissionIds.forEach(async (permissionId) => {\n        await this.prisma.role.update({\n          where: { id: roleId, deletedAt: null },\n          data: {\n            permissions: {\n              connect: {\n                id: permissionId,\n              },\n            },\n          },\n        });\n\n      })\n\n\n  }\n\n  /**\n   * Deletes a role by its ID.\n   *\n   * @param {number} roleId - The ID of the role to delete.\n   * @returns {Promise} A promise that resolves when the role is deleted successfully.\n   * @throws {NotFoundException} If the role with the specified ID is not found.\n   * @throws {HttpException} If the role has already been deleted.\n   */\n  async deleteRole(roleId: number): Promise {\n    const role = await this.prisma.role.findFirst({ where: { id: roleId, deletedAt: null } });\n    if (!role || role.deletedAt !== null)\n      throw new NotFoundException(`Role ${roleId} not found`);\n\n    if (role.deletedAt === null) {\n      await this.prisma.role.update({\n        where: { id: roleId, deletedAt: null },\n        data: { deletedAt: new Date(Date.now()) },\n      });\n    } else {\n      throw new HttpException('Role already deleted', 400);\n    }\n  }\n\n  async undeleteRole(roleId: number): Promise {\n    const role = await this.prisma.role.findFirst({\n      where: { id: roleId, deletedAt: { not: null } },\n    });\n  \n    if (!role) {\n      throw new NotFoundException(`Role ${roleId} not found`);\n    }\n  \n    if (role.deletedAt !== null) {\n      await this.prisma.role.update({\n        where: { id: roleId },\n        data: { deletedAt: null },\n      });\n    } else {\n      throw new HttpException('Role is not deleted', 400);\n    }\n  }\n  \n\n   /**\n   * Assigns a role to a user.\n   *\n   * @param {AssignRoleToUserDto} assignRoleToUser - The data for assigning the role to the user.\n   * @returns {Promise} A promise that resolves when the role is assigned to the user successfully.\n   * @throws {NotFoundException} If the user or role with the specified ID is not found.\n   * @throws {HttpException} If the user already has the specified role.\n   */\n  async assignRoleToUser(assignRoleToUser: AssignRoleToUserDto): Promise {\n    const { userId, roleId } = assignRoleToUser;\n\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId, deletedAt: null },\n    });\n\n    if (!user) throw new NotFoundException('User not found');\n\n    const role = await this.prisma.role.findUnique({\n      where: { id: roleId, deletedAt: null },\n    });\n\n    if (!role) throw new NotFoundException('Role not found');\n\n    const userRole = await this.prisma.user.findFirst({\n      where: {\n        id: userId,\n        deletedAt: null,\n        roles: {\n          some: {\n            id: roleId,\n          },\n        },\n      },\n    });\n\n    if (userRole) throw new HttpException('User already has this role', 400);\n\n    await this.prisma.role.update({\n      where: { id: roleId, updatedAt: null },\n      data: {\n        user: {\n          connect: {\n            id: userId,\n          },\n        },\n      },\n    });\n  }\n\n\n /**\n * Disconnects a role from a user based on the provided DTO.\n *\n * @async\n * @param {RevokeRoleOfUserDto} revokeRoleOfUserDto - The DTO containing userId and roleId.\n * @throws {NotFoundException} If the user or role is not found.\n * @throws {HttpException} If the user doesn't have the specified role.\n */\nasync revokeRoleOfUser(revokeRoleOfUserDto: AssignRoleToUserDto): Promise {\n  const { userId, roleId } = revokeRoleOfUserDto;\n\n  // Find the user with the provided userId\n  const user = await this.prisma.user.findUnique({\n    where: { id: userId, deletedAt: null },\n  });\n\n  if (!user) {\n      // If the user doesn't exist, throw an error\n      throw new NotFoundException('User not found');\n  }\n\n  // Check if the user has the specified role\n  const role = await this.prisma.role.findFirst({\n      where: { id: roleId, user: { some: { id: userId } } }\n  });\n\n  if (!role) {\n      // If the role doesn't exist, throw an error\n      throw new NotFoundException('Role not found');\n  }\n\n  // Update the user's roles to disconnect the specified role\n  await this.prisma.role.update({\n      where: { id: roleId, deletedAt: null },\n      data: {\n          user: {\n              disconnect: { id: userId }\n          }\n      }\n  });\n}\n\n\n\n  /**\n   * Retrieves a list of permissions assigned to a user.\n   *\n   * @param {number} userId - The ID of the user.\n   * @returns {Promise} A promise that resolves to an array of Permission objects.\n   */\n  async getPermissionsForUser(userId: number): Promise {\n    const userWithRoles = await this.prisma.user.findFirst({\n      where: { id: userId, deletedAt: null },\n      include: { roles: { include: { permissions: { where: { deletedAt: null } } } } },\n    });\n  \n    const allPermissions: Permission[] = userWithRoles.roles\n      .flatMap((role) => role.permissions)\n      .filter((permission) => permission.deletedAt === null);\n    return allPermissions;\n  }\n  \n\n  /**\n   * Checks if a user has specific roles.\n   *\n   * @param {number} userId - The ID of the user.\n   * @param {string[]} requiredRoles - An array of role names required for access.\n   * @returns {Promise} A promise that resolves to true if the user has all the required roles; otherwise, false.\n   */\n  async hasRoles(userId: any, requiredRoles: string[]): Promise {\n    const user = await this.prisma.user.findFirst({\n      where: { id: userId, deletedAt: null },\n      include: { roles: true },\n    });\n    if (user.roles.length === 0) {\n      return false;\n    }\n\n    for (const role of user.roles) {\n      const roles = await this.prisma.role.findFirst({\n        where: { id: role.id, deletedAt: null },\n      });\n      if (requiredRoles.includes(roles.name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Checks if a user has specific permissions.\n   *\n   * @param {number} userId - The ID of the user.\n   * @param {string[]} requiredPermissions - An array of permission names required for access.\n   * @returns {Promise} A promise that resolves to true if the user has all the required permissions; otherwise, false.\n   */\n  async hasPermission(\n    userId: number,\n    requiredPermissions: string[],\n  ): Promise {\n    const permissions = await this.getPermissionsForUser(userId);\n    for (const permission of permissions) {\n      if (requiredPermissions.includes(permission.name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecureUserService.html":{"url":"injectables/SecureUserService.html","title":"injectable - SecureUserService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SecureUserService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/user.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(prisma: PrismaService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getUsers\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getUsers()\n                                \n                            \n            \n                            \n                                \n                                        Get all users\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            A list of all active users.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createUser(createUserDto: CreateUserDto)\n                                \n                            \n            \n                            \n                                \n                                        Create a new user\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                createUserDto\n                                                                    :     CreateUserDto\n            \n                                                            \n                                                            \n                                                                \n            User data to create.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The newly created user.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     findUserByEmail\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findUserByEmail(email: string)\n                                \n                            \n            \n                            \n                                \n                                        Find user by email\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                \n            The email of the user to find.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The requested user.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getUserById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getUserById(id: number)\n                                \n                            \n            \n                            \n                                \n                                        Get user by ID\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            The ID of the user to retrieve.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The requested user.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateUser(id: number, updateUserDto: UpdateUserDto)\n                                \n                            \n            \n                            \n                                \n                                        Update user by ID\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            The ID of the user to update.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                updateUserDto\n                                                                    :     UpdateUserDto\n            \n                                                            \n                                                            \n                                                                \n            User data to update.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The updated user.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteUser(id: number)\n                                \n                            \n            \n                            \n                                \n                                        Delete user by ID\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            The ID of the user to delete.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n            The deleted user.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deactivateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deactivateUser(id: number)\n                                \n                            \n            \n                            \n                                \n                                        Deactivate user by ID\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            The ID of the user to deactivate.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     reactivateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    reactivateUser(id: number)\n                                \n                            \n            \n                            \n                                \n                                        Reactivate user by ID\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            The ID of the user to reactivate.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { HttpException, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateUserDto, UpdateUserDto} from '../dto/user.dto';\nimport { User } from '@prisma/client';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from '../../auth/prismaService/prisma.service';\n@Injectable()\nexport class SecureUserService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  /**\n   * Get all users\n   * @returns {Promise} - A list of all active users.\n   */\n  async getUsers(): Promise {\n    return await this.prisma.user.findMany({ where: { deletedAt: null } });\n  }\n\n  /**\n   * Create a new user\n   * @param {CreateUserDto} createUserDto - User data to create.\n   * @returns {Promise} - The newly created user.\n   * @throws {HttpException} - Invalid email or password, or user already exists.\n   */\n  async createUser(createUserDto: CreateUserDto): Promise {\n    const { email, password } = createUserDto;\n    if (!email || !password) throw new HttpException('Invalid email or password', 400);\n    const user = await this.prisma.user.findFirst({ where: { email, deletedAt: null } });\n\n    if (user) throw new HttpException('User already exists', 400);\n\n    const saltpounds = 10;\n    const hashPassword = await bcrypt.hash(password, saltpounds);\n\n    return await this.prisma.user.create({\n      data: {\n        email: createUserDto.email,\n        password: hashPassword,\n      },\n    });\n  }\n\n  /**\n   * Find user by email\n   * @param {string} email - The email of the user to find.\n   * @returns {Promise} - The requested user.\n   * @throws {NotFoundException} - User not found.\n   */\n  async findUserByEmail(email: string): Promise {\n    const user = await this.prisma.user.findFirst({ where: { email, deletedAt: null } });\n\n    if (!user) throw new NotFoundException('User not found');\n\n    return user;\n  }\n\n  /**\n   * Get user by ID\n   * @param {number} id - The ID of the user to retrieve.\n   * @returns {Promise} - The requested user.\n   * @throws {NotFoundException} - User not found.\n   */\n  async getUserById(id: number): Promise {\n    const user = await this.prisma.user.findFirst({ where: { id, deletedAt: null } });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  /**\n   * Update user by ID\n   * @param {number} id - The ID of the user to update.\n   * @param {UpdateUserDto} updateUserDto - User data to update.\n   * @returns {Promise} - The updated user.\n   * @throws {HttpException} - Invalid email or password, or password is the same as the previous password.\n   * @throws {NotFoundException} - User not found.\n   */\n  async updateUser(id: number, updateUserDto: UpdateUserDto): Promise {\n    const { email, password } = updateUserDto;\n\n    if ((!email && !password) || !password) throw new HttpException('Invalid email or password', 400);\n    const user = await this.getUserById(id);\n\n    const verifyPassword = await bcrypt.compare(password, user.password);\n\n    if (verifyPassword) throw new HttpException('Password is the same as the previous password', 400);\n\n    const saltpounds = 10;\n    const hashPassword = await bcrypt.hash(password, saltpounds);\n\n    return await this.prisma.user.update({\n      where: { id, deletedAt: null },\n      data: { email, password: hashPassword },\n    });\n  }\n\n  /**\n   * Delete user by ID\n   * @param {number} id - The ID of the user to delete.\n   * @returns {Promise} - The deleted user.\n   * @throws {NotFoundException} - User not found.\n   */\n  async deleteUser(id: number): Promise {\n    await this.getUserById(id);\n\n    return await this.prisma.user.delete({\n      where: { id, deletedAt: null },\n    });\n  }\n\n  /**\n   * Deactivate user by ID\n   * @param {number} id - The ID of the user to deactivate.\n   * @throws {HttpException} - User already deactivated.\n   * @throws {NotFoundException} - User not found.\n   */\n  async deactivateUser(id: number): Promise {\n    const user = await this.prisma.user.findFirst({ where: { id } });\n    if (!user) throw new NotFoundException('User not found');\n\n    if (user.deletedAt === null) {\n      await this.prisma.user.update({\n        where: { id, deletedAt: null },\n        data: { deletedAt: new Date(Date.now()) },\n      });\n    } else {\n      throw new HttpException('User already deactivated', 400);\n    }\n  }\n\n  /**\n   * Reactivate user by ID\n   * @param {number} id - The ID of the user to reactivate.\n   * @throws {HttpException} - User already activated.\n   * @throws {NotFoundException} - User not found.\n   */\n  async reactivateUser(id: number): Promise {\n    console.log(id);\n    const user = await this.prisma.user.findFirst({ where: { id } });\n    if (!user) throw new NotFoundException('User not found');\n\n    if (user.deletedAt !== null) {\n      await this.prisma.user.update({\n        where: { id },\n        data: { deletedAt: null },\n      });\n    } else {\n      throw new HttpException('User already activated', 400);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZodValidationPipe.html":{"url":"injectables/ZodValidationPipe.html","title":"injectable - ZodValidationPipe","body":"\n                   \n\n\n\n\n\n  Injectables\n  ZodValidationPipe\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/common/zod-validation-pipe.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(schema: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     transform\n                                \n                            \n            \n                            \n                                \n            transform(value: any, metadata: ArgumentMetadata)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\r\nimport { ZodSchema, ZodError } from 'zod';\r\n\r\n@Injectable()\r\nexport class ZodValidationPipe implements PipeTransform {\r\n  constructor(private schema: ZodSchema) {}\r\n\r\n  transform(value: any, metadata: ArgumentMetadata) {\r\n    try {\r\n      this.schema.parse(value);\r\n      return value;\r\n    } catch (error) {\r\n      if (error instanceof ZodError) {\r\n        throw new BadRequestException(`Validation failed, message: ${error.issues[0].message}`);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignPermissionToRoleDto.html":{"url":"classes/AssignPermissionToRoleDto.html","title":"class - AssignPermissionToRoleDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  AssignPermissionToRoleDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/dto/permission-role.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a new role.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                            \n                                \n                                    The name of the role to create.\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from \"@nestjs/swagger\";\r\nimport { IsArray, IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\r\nimport { PartialType } from \"@nestjs/mapped-types\";\r\nimport { z } from 'zod'\r\n\r\n\r\nexport const roleSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const permissionToRoleSchema =  z.object({\r\n    roleId: z.number(),\r\n    permissionId: z.array(z.number())\r\n})\r\n\r\n\r\nexport const roleStatusSchema =  z.object({\r\n  userId: z.number(),\r\n  roleId: z.number()\r\n})\r\n\r\nexport const permissionSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const roleIdSchema =  z.object({\r\n  roleId: z.number(),\r\n})\r\n\r\n/**\r\n * DTO for creating a new role.\r\n *\r\n * @class\r\n */\r\nexport class RoleDto {\r\n  /**\r\n   * The name of the role to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'user'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the role to create',\r\n    example: 'user',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n\r\n}\r\n\r\nexport class AssignPermissionToRoleDto {\r\n  /**\r\n   * The role id to assign permissions.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id to assign permissions',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n\r\n  /**\r\n   * The id of the permission to be assigned to the role (optional).\r\n   *\r\n   * @property\r\n   * @type {number[]}\r\n   * @example [1,2]\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of permission to be assign to role',\r\n    example: [1,2],\r\n  })\r\n  @IsNotEmpty()\r\n  @IsArray()\r\n  permissionIds: number[];\r\n}\r\n\r\n/**\r\n * DTO for assigning a role to a user.\r\n *\r\n * @class\r\n */\r\nexport class AssignRoleToUserDto {\r\n  /**\r\n   * The id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n}\r\n\r\n/**\r\n * DTO for creating a new permission.\r\n *\r\n * @class\r\n */\r\nexport class PermissionDto {\r\n  /**\r\n   * The name of the permission to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'write'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the permission to create',\r\n    example: 'write',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n}\r\n\r\nexport class RoleIdDto {\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignRoleToUserDto.html":{"url":"classes/AssignRoleToUserDto.html","title":"class - AssignRoleToUserDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  AssignRoleToUserDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/dto/permission-role.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a new role.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                            \n                                \n                                    The name of the role to create.\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from \"@nestjs/swagger\";\r\nimport { IsArray, IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\r\nimport { PartialType } from \"@nestjs/mapped-types\";\r\nimport { z } from 'zod'\r\n\r\n\r\nexport const roleSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const permissionToRoleSchema =  z.object({\r\n    roleId: z.number(),\r\n    permissionId: z.array(z.number())\r\n})\r\n\r\n\r\nexport const roleStatusSchema =  z.object({\r\n  userId: z.number(),\r\n  roleId: z.number()\r\n})\r\n\r\nexport const permissionSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const roleIdSchema =  z.object({\r\n  roleId: z.number(),\r\n})\r\n\r\n/**\r\n * DTO for creating a new role.\r\n *\r\n * @class\r\n */\r\nexport class RoleDto {\r\n  /**\r\n   * The name of the role to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'user'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the role to create',\r\n    example: 'user',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n\r\n}\r\n\r\nexport class AssignPermissionToRoleDto {\r\n  /**\r\n   * The role id to assign permissions.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id to assign permissions',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n\r\n  /**\r\n   * The id of the permission to be assigned to the role (optional).\r\n   *\r\n   * @property\r\n   * @type {number[]}\r\n   * @example [1,2]\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of permission to be assign to role',\r\n    example: [1,2],\r\n  })\r\n  @IsNotEmpty()\r\n  @IsArray()\r\n  permissionIds: number[];\r\n}\r\n\r\n/**\r\n * DTO for assigning a role to a user.\r\n *\r\n * @class\r\n */\r\nexport class AssignRoleToUserDto {\r\n  /**\r\n   * The id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n}\r\n\r\n/**\r\n * DTO for creating a new permission.\r\n *\r\n * @class\r\n */\r\nexport class PermissionDto {\r\n  /**\r\n   * The name of the permission to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'write'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the permission to create',\r\n    example: 'write',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n}\r\n\r\nexport class RoleIdDto {\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data transfer object for creating a new user.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsEmail, MinLength, IsString } from 'class-validator';\r\nimport { PartialType } from '@nestjs/mapped-types';\r\nimport { z } from 'zod';\r\n\r\n\r\n/**\r\n * Data transfer object for creating a new user.\r\n */\r\nexport class CreateUserDto {\r\n  @ApiProperty({\r\n    description: 'The email of user to create',\r\n    example: 'user@example.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  @ApiProperty({\r\n    description: 'The password of user to create',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @MinLength(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data transfer object for updating a user.\r\n * Note: This class extends PartialType(CreateUserDto) to allow partial updates.\r\n */\r\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) for user signup.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                            \n                                \n                                    The email of the user \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                            \n                                \n                                    The password of the user \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEmail, IsNotEmpty, IsNumber, IsString, Length, min } from 'class-validator';\r\nimport {z} from 'zod'\r\n\r\n\r\nexport const userAuthSchema = z.object({\r\n  email: z.string().email(),\r\n  password: z.coerce.string().min(6)\r\n})\r\n\r\nexport const forgotPasswordSchema = z.object({\r\n  email: z.string().email(),\r\n})\r\n\r\nexport const resetPasswordSchema = z.object({\r\n  userId: z.number().positive(),\r\n  oldPassword: z.coerce.string().min(6),\r\n  newPassword: z.coerce.string().min(6)\r\n})\r\n\r\n/**\r\n * Data Transfer Object (DTO) for user signup.\r\n */\r\nexport class SignupDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  /** The password of the user */\r\n  @ApiProperty({\r\n    description: 'The password of the user',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for requesting password reset.\r\n */\r\nexport class ForgotPasswordDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for user login.\r\n */\r\nexport class LoginDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  /** The password of the user */\r\n  @ApiProperty({\r\n    description: 'The password of the user',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for resetting the user's password.\r\n */\r\nexport class ResetPasswordDto {\r\n   /** The id of the user */\r\n   @ApiProperty({\r\n    description: 'The id for the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The new password for the user',\r\n    example: 'oldpassword123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  oldPassword: string;\r\n\r\n  /** The new password for the user */\r\n  @ApiProperty({\r\n    description: 'The new password for the user',\r\n    example: 'newpassword123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  newPassword: string;\r\n\r\n\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) for user signup.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                            \n                                \n                                    The email of the user \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                            \n                                \n                                    The password of the user \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEmail, IsNotEmpty, IsNumber, IsString, Length, min } from 'class-validator';\r\nimport {z} from 'zod'\r\n\r\n\r\nexport const userAuthSchema = z.object({\r\n  email: z.string().email(),\r\n  password: z.coerce.string().min(6)\r\n})\r\n\r\nexport const forgotPasswordSchema = z.object({\r\n  email: z.string().email(),\r\n})\r\n\r\nexport const resetPasswordSchema = z.object({\r\n  userId: z.number().positive(),\r\n  oldPassword: z.coerce.string().min(6),\r\n  newPassword: z.coerce.string().min(6)\r\n})\r\n\r\n/**\r\n * Data Transfer Object (DTO) for user signup.\r\n */\r\nexport class SignupDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  /** The password of the user */\r\n  @ApiProperty({\r\n    description: 'The password of the user',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for requesting password reset.\r\n */\r\nexport class ForgotPasswordDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for user login.\r\n */\r\nexport class LoginDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  /** The password of the user */\r\n  @ApiProperty({\r\n    description: 'The password of the user',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for resetting the user's password.\r\n */\r\nexport class ResetPasswordDto {\r\n   /** The id of the user */\r\n   @ApiProperty({\r\n    description: 'The id for the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The new password for the user',\r\n    example: 'oldpassword123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  oldPassword: string;\r\n\r\n  /** The new password for the user */\r\n  @ApiProperty({\r\n    description: 'The new password for the user',\r\n    example: 'newpassword123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  newPassword: string;\r\n\r\n\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionDto.html":{"url":"classes/PermissionDto.html","title":"class - PermissionDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  PermissionDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/dto/permission-role.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a new role.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                            \n                                \n                                    The name of the role to create.\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from \"@nestjs/swagger\";\r\nimport { IsArray, IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\r\nimport { PartialType } from \"@nestjs/mapped-types\";\r\nimport { z } from 'zod'\r\n\r\n\r\nexport const roleSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const permissionToRoleSchema =  z.object({\r\n    roleId: z.number(),\r\n    permissionId: z.array(z.number())\r\n})\r\n\r\n\r\nexport const roleStatusSchema =  z.object({\r\n  userId: z.number(),\r\n  roleId: z.number()\r\n})\r\n\r\nexport const permissionSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const roleIdSchema =  z.object({\r\n  roleId: z.number(),\r\n})\r\n\r\n/**\r\n * DTO for creating a new role.\r\n *\r\n * @class\r\n */\r\nexport class RoleDto {\r\n  /**\r\n   * The name of the role to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'user'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the role to create',\r\n    example: 'user',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n\r\n}\r\n\r\nexport class AssignPermissionToRoleDto {\r\n  /**\r\n   * The role id to assign permissions.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id to assign permissions',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n\r\n  /**\r\n   * The id of the permission to be assigned to the role (optional).\r\n   *\r\n   * @property\r\n   * @type {number[]}\r\n   * @example [1,2]\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of permission to be assign to role',\r\n    example: [1,2],\r\n  })\r\n  @IsNotEmpty()\r\n  @IsArray()\r\n  permissionIds: number[];\r\n}\r\n\r\n/**\r\n * DTO for assigning a role to a user.\r\n *\r\n * @class\r\n */\r\nexport class AssignRoleToUserDto {\r\n  /**\r\n   * The id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n}\r\n\r\n/**\r\n * DTO for creating a new permission.\r\n *\r\n * @class\r\n */\r\nexport class PermissionDto {\r\n  /**\r\n   * The name of the permission to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'write'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the permission to create',\r\n    example: 'write',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n}\r\n\r\nexport class RoleIdDto {\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) for user signup.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                            \n                                \n                                    The email of the user \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                            \n                                \n                                    The password of the user \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEmail, IsNotEmpty, IsNumber, IsString, Length, min } from 'class-validator';\r\nimport {z} from 'zod'\r\n\r\n\r\nexport const userAuthSchema = z.object({\r\n  email: z.string().email(),\r\n  password: z.coerce.string().min(6)\r\n})\r\n\r\nexport const forgotPasswordSchema = z.object({\r\n  email: z.string().email(),\r\n})\r\n\r\nexport const resetPasswordSchema = z.object({\r\n  userId: z.number().positive(),\r\n  oldPassword: z.coerce.string().min(6),\r\n  newPassword: z.coerce.string().min(6)\r\n})\r\n\r\n/**\r\n * Data Transfer Object (DTO) for user signup.\r\n */\r\nexport class SignupDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  /** The password of the user */\r\n  @ApiProperty({\r\n    description: 'The password of the user',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for requesting password reset.\r\n */\r\nexport class ForgotPasswordDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for user login.\r\n */\r\nexport class LoginDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  /** The password of the user */\r\n  @ApiProperty({\r\n    description: 'The password of the user',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for resetting the user's password.\r\n */\r\nexport class ResetPasswordDto {\r\n   /** The id of the user */\r\n   @ApiProperty({\r\n    description: 'The id for the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The new password for the user',\r\n    example: 'oldpassword123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  oldPassword: string;\r\n\r\n  /** The new password for the user */\r\n  @ApiProperty({\r\n    description: 'The new password for the user',\r\n    example: 'newpassword123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  newPassword: string;\r\n\r\n\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleDto.html":{"url":"classes/RoleDto.html","title":"class - RoleDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  RoleDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/dto/permission-role.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a new role.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                            \n                                \n                                    The name of the role to create.\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from \"@nestjs/swagger\";\r\nimport { IsArray, IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\r\nimport { PartialType } from \"@nestjs/mapped-types\";\r\nimport { z } from 'zod'\r\n\r\n\r\nexport const roleSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const permissionToRoleSchema =  z.object({\r\n    roleId: z.number(),\r\n    permissionId: z.array(z.number())\r\n})\r\n\r\n\r\nexport const roleStatusSchema =  z.object({\r\n  userId: z.number(),\r\n  roleId: z.number()\r\n})\r\n\r\nexport const permissionSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const roleIdSchema =  z.object({\r\n  roleId: z.number(),\r\n})\r\n\r\n/**\r\n * DTO for creating a new role.\r\n *\r\n * @class\r\n */\r\nexport class RoleDto {\r\n  /**\r\n   * The name of the role to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'user'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the role to create',\r\n    example: 'user',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n\r\n}\r\n\r\nexport class AssignPermissionToRoleDto {\r\n  /**\r\n   * The role id to assign permissions.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id to assign permissions',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n\r\n  /**\r\n   * The id of the permission to be assigned to the role (optional).\r\n   *\r\n   * @property\r\n   * @type {number[]}\r\n   * @example [1,2]\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of permission to be assign to role',\r\n    example: [1,2],\r\n  })\r\n  @IsNotEmpty()\r\n  @IsArray()\r\n  permissionIds: number[];\r\n}\r\n\r\n/**\r\n * DTO for assigning a role to a user.\r\n *\r\n * @class\r\n */\r\nexport class AssignRoleToUserDto {\r\n  /**\r\n   * The id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n}\r\n\r\n/**\r\n * DTO for creating a new permission.\r\n *\r\n * @class\r\n */\r\nexport class PermissionDto {\r\n  /**\r\n   * The name of the permission to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'write'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the permission to create',\r\n    example: 'write',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n}\r\n\r\nexport class RoleIdDto {\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleIdDto.html":{"url":"classes/RoleIdDto.html","title":"class - RoleIdDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  RoleIdDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/dto/permission-role.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a new role.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                            \n                                \n                                    The name of the role to create.\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from \"@nestjs/swagger\";\r\nimport { IsArray, IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\r\nimport { PartialType } from \"@nestjs/mapped-types\";\r\nimport { z } from 'zod'\r\n\r\n\r\nexport const roleSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const permissionToRoleSchema =  z.object({\r\n    roleId: z.number(),\r\n    permissionId: z.array(z.number())\r\n})\r\n\r\n\r\nexport const roleStatusSchema =  z.object({\r\n  userId: z.number(),\r\n  roleId: z.number()\r\n})\r\n\r\nexport const permissionSchema =  z.object({\r\n  name: z.string().toLowerCase(),\r\n})\r\n\r\nexport const roleIdSchema =  z.object({\r\n  roleId: z.number(),\r\n})\r\n\r\n/**\r\n * DTO for creating a new role.\r\n *\r\n * @class\r\n */\r\nexport class RoleDto {\r\n  /**\r\n   * The name of the role to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'user'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the role to create',\r\n    example: 'user',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n\r\n}\r\n\r\nexport class AssignPermissionToRoleDto {\r\n  /**\r\n   * The role id to assign permissions.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id to assign permissions',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n\r\n  /**\r\n   * The id of the permission to be assigned to the role (optional).\r\n   *\r\n   * @property\r\n   * @type {number[]}\r\n   * @example [1,2]\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of permission to be assign to role',\r\n    example: [1,2],\r\n  })\r\n  @IsNotEmpty()\r\n  @IsArray()\r\n  permissionIds: number[];\r\n}\r\n\r\n/**\r\n * DTO for assigning a role to a user.\r\n *\r\n * @class\r\n */\r\nexport class AssignRoleToUserDto {\r\n  /**\r\n   * The id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number;\r\n}\r\n\r\n/**\r\n * DTO for creating a new permission.\r\n *\r\n * @class\r\n */\r\nexport class PermissionDto {\r\n  /**\r\n   * The name of the permission to create.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   * @example 'write'\r\n   */\r\n  @ApiProperty({\r\n    description: 'The name of the permission to create',\r\n    example: 'write',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name: string;\r\n}\r\n\r\nexport class RoleIdDto {\r\n  /**\r\n   * The role id of the user.\r\n   *\r\n   * @property\r\n   * @type {number}\r\n   * @example 1\r\n   */\r\n  @ApiProperty({\r\n    description: 'The role id of the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  roleId: number\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) for user signup.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                            \n                                \n                                    The email of the user \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                            \n                                \n                                    The password of the user \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsEmail, IsNotEmpty, IsNumber, IsString, Length, min } from 'class-validator';\r\nimport {z} from 'zod'\r\n\r\n\r\nexport const userAuthSchema = z.object({\r\n  email: z.string().email(),\r\n  password: z.coerce.string().min(6)\r\n})\r\n\r\nexport const forgotPasswordSchema = z.object({\r\n  email: z.string().email(),\r\n})\r\n\r\nexport const resetPasswordSchema = z.object({\r\n  userId: z.number().positive(),\r\n  oldPassword: z.coerce.string().min(6),\r\n  newPassword: z.coerce.string().min(6)\r\n})\r\n\r\n/**\r\n * Data Transfer Object (DTO) for user signup.\r\n */\r\nexport class SignupDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  /** The password of the user */\r\n  @ApiProperty({\r\n    description: 'The password of the user',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for requesting password reset.\r\n */\r\nexport class ForgotPasswordDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for user login.\r\n */\r\nexport class LoginDto {\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The email of the user',\r\n    example: 'johndoe@gmail.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  /** The password of the user */\r\n  @ApiProperty({\r\n    description: 'The password of the user',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object (DTO) for resetting the user's password.\r\n */\r\nexport class ResetPasswordDto {\r\n   /** The id of the user */\r\n   @ApiProperty({\r\n    description: 'The id for the user',\r\n    example: 1,\r\n  })\r\n  @IsNotEmpty()\r\n  @IsNumber()\r\n  userId: number;\r\n\r\n  /** The email of the user */\r\n  @ApiProperty({\r\n    description: 'The new password for the user',\r\n    example: 'oldpassword123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  oldPassword: string;\r\n\r\n  /** The new password for the user */\r\n  @ApiProperty({\r\n    description: 'The new password for the user',\r\n    example: 'newpassword123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @Length(6)\r\n  newPassword: string;\r\n\r\n\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data transfer object for creating a new user.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsEmail, MinLength, IsString } from 'class-validator';\r\nimport { PartialType } from '@nestjs/mapped-types';\r\nimport { z } from 'zod';\r\n\r\n\r\n/**\r\n * Data transfer object for creating a new user.\r\n */\r\nexport class CreateUserDto {\r\n  @ApiProperty({\r\n    description: 'The email of user to create',\r\n    example: 'user@example.com',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  @ApiProperty({\r\n    description: 'The password of user to create',\r\n    example: 'password123',\r\n  })\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  @MinLength(6)\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Data transfer object for updating a user.\r\n * Note: This class extends PartialType(CreateUserDto) to allow partial updates.\r\n */\r\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfig.html":{"url":"interfaces/AuthConfig.html","title":"interface - AuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  AuthConfig\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing the configuration options for authentication, specifically JSON Web Token (JWT) authentication.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:     JwtConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JwtConfig\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The JWT configuration options.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface JwtConfig {\r\n  /**\r\n   * The secret key used for signing and verifying JWT tokens.\r\n   */\r\n  secret: string;\r\n  \r\n  /**\r\n   * The expiration time for JWT tokens.\r\n   */\r\n  expiresIn: string;\r\n}\r\n\r\n/**\r\n * Interface representing the configuration options for authentication.\r\n */\r\nexport interface AuthConfigure {\r\n  // Other authentication-related configuration properties...\r\n\r\n  /**\r\n   * Configuration options for the \"Forgot Password\" functionality.\r\n   */\r\n  forgotPassword: {\r\n    /**\r\n     * The URL where users will be redirected to reset their password.\r\n     */\r\n    resetPasswordUrl: string;\r\n    \r\n    /**\r\n     * The expiration time (in milliseconds) for the reset token.\r\n     */\r\n    resetPasswordExpiration: number;\r\n    // Other configuration options as needed...\r\n  };\r\n\r\n  /**\r\n   * Configuration options for the email transporter used for sending emails.\r\n   */\r\n  emailTransporter: {\r\n    /**\r\n     * The hostname of the email server.\r\n     */\r\n    host: string;\r\n    \r\n    /**\r\n     * The port number of the email server.\r\n     */\r\n    port: number;\r\n    \r\n    /**\r\n     * A boolean indicating if the connection to the email server should use SSL/TLS.\r\n     */\r\n    secure: boolean;\r\n    \r\n    /**\r\n     * Authentication credentials for the email server.\r\n     */\r\n    auth: {\r\n      /**\r\n       * The username used for authenticating with the email server.\r\n       */\r\n      user: string;\r\n      \r\n      /**\r\n       * The password used for authenticating with the email server.\r\n       */\r\n      pass: string;\r\n    };\r\n    \r\n    /**\r\n     * The email address of the sender.\r\n     */\r\n    sender: string;\r\n  };\r\n\r\n  /**\r\n   * Configuration options for JSON Web Token (JWT) authentication.\r\n   */\r\n  jwt: {\r\n    /**\r\n     * The JWT configuration options.\r\n     */\r\n    jwt: JwtConfig;\r\n  };\r\n}\r\n\r\n/**\r\n * Interface representing the configuration options for authentication, specifically JSON Web Token (JWT) authentication.\r\n */\r\nexport interface AuthConfig {\r\n  /**\r\n   * The JWT configuration options.\r\n   */\r\n  jwt: JwtConfig;\r\n}\r\n\r\n/**\r\n * Interface representing the payload of a JSON Web Token (JWT).\r\n */\r\nexport interface TokenPayload {\r\n  /**\r\n   * The email associated with the token.\r\n   */\r\n  email: string;\r\n  \r\n  /**\r\n   * The subject of the token, typically representing the user's ID.\r\n   */\r\n  sub: number;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfigure.html":{"url":"interfaces/AuthConfigure.html","title":"interface - AuthConfigure","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  AuthConfigure\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing the configuration options for authentication.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        emailTransporter\n                                    \n                                \n                                \n                                    \n                                        emailTransporter:     { host: string; port: number; secure: boolean; auth: { user: string; pass: string; }; sender: str...\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { host: string; port: number; secure: boolean; auth: { user: string; pass: string; }; sender: str...\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    Configuration options for the email transporter used for sending emails.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        forgotPassword\n                                    \n                                \n                                \n                                    \n                                        forgotPassword:     { resetPasswordUrl: string; resetPasswordExpiration: number; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { resetPasswordUrl: string; resetPasswordExpiration: number; }\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    Configuration options for the \"Forgot Password\" functionality.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:     { jwt: JwtConfig; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { jwt: JwtConfig; }\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    Configuration options for JSON Web Token (JWT) authentication.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface JwtConfig {\r\n  /**\r\n   * The secret key used for signing and verifying JWT tokens.\r\n   */\r\n  secret: string;\r\n  \r\n  /**\r\n   * The expiration time for JWT tokens.\r\n   */\r\n  expiresIn: string;\r\n}\r\n\r\n/**\r\n * Interface representing the configuration options for authentication.\r\n */\r\nexport interface AuthConfigure {\r\n  // Other authentication-related configuration properties...\r\n\r\n  /**\r\n   * Configuration options for the \"Forgot Password\" functionality.\r\n   */\r\n  forgotPassword: {\r\n    /**\r\n     * The URL where users will be redirected to reset their password.\r\n     */\r\n    resetPasswordUrl: string;\r\n    \r\n    /**\r\n     * The expiration time (in milliseconds) for the reset token.\r\n     */\r\n    resetPasswordExpiration: number;\r\n    // Other configuration options as needed...\r\n  };\r\n\r\n  /**\r\n   * Configuration options for the email transporter used for sending emails.\r\n   */\r\n  emailTransporter: {\r\n    /**\r\n     * The hostname of the email server.\r\n     */\r\n    host: string;\r\n    \r\n    /**\r\n     * The port number of the email server.\r\n     */\r\n    port: number;\r\n    \r\n    /**\r\n     * A boolean indicating if the connection to the email server should use SSL/TLS.\r\n     */\r\n    secure: boolean;\r\n    \r\n    /**\r\n     * Authentication credentials for the email server.\r\n     */\r\n    auth: {\r\n      /**\r\n       * The username used for authenticating with the email server.\r\n       */\r\n      user: string;\r\n      \r\n      /**\r\n       * The password used for authenticating with the email server.\r\n       */\r\n      pass: string;\r\n    };\r\n    \r\n    /**\r\n     * The email address of the sender.\r\n     */\r\n    sender: string;\r\n  };\r\n\r\n  /**\r\n   * Configuration options for JSON Web Token (JWT) authentication.\r\n   */\r\n  jwt: {\r\n    /**\r\n     * The JWT configuration options.\r\n     */\r\n    jwt: JwtConfig;\r\n  };\r\n}\r\n\r\n/**\r\n * Interface representing the configuration options for authentication, specifically JSON Web Token (JWT) authentication.\r\n */\r\nexport interface AuthConfig {\r\n  /**\r\n   * The JWT configuration options.\r\n   */\r\n  jwt: JwtConfig;\r\n}\r\n\r\n/**\r\n * Interface representing the payload of a JSON Web Token (JWT).\r\n */\r\nexport interface TokenPayload {\r\n  /**\r\n   * The email associated with the token.\r\n   */\r\n  email: string;\r\n  \r\n  /**\r\n   * The subject of the token, typically representing the user's ID.\r\n   */\r\n  sub: number;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConfig.html":{"url":"interfaces/JwtConfig.html","title":"interface - JwtConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConfig\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing the configuration for JSON Web Token (JWT) authentication.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        expiresIn\n                                    \n                                \n                                \n                                    \n                                        expiresIn:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The expiration time for JWT tokens.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The secret key used for signing and verifying JWT tokens.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface JwtConfig {\r\n  /**\r\n   * The secret key used for signing and verifying JWT tokens.\r\n   */\r\n  secret: string;\r\n  \r\n  /**\r\n   * The expiration time for JWT tokens.\r\n   */\r\n  expiresIn: string;\r\n}\r\n\r\n/**\r\n * Interface representing the configuration options for authentication.\r\n */\r\nexport interface AuthConfigure {\r\n  // Other authentication-related configuration properties...\r\n\r\n  /**\r\n   * Configuration options for the \"Forgot Password\" functionality.\r\n   */\r\n  forgotPassword: {\r\n    /**\r\n     * The URL where users will be redirected to reset their password.\r\n     */\r\n    resetPasswordUrl: string;\r\n    \r\n    /**\r\n     * The expiration time (in milliseconds) for the reset token.\r\n     */\r\n    resetPasswordExpiration: number;\r\n    // Other configuration options as needed...\r\n  };\r\n\r\n  /**\r\n   * Configuration options for the email transporter used for sending emails.\r\n   */\r\n  emailTransporter: {\r\n    /**\r\n     * The hostname of the email server.\r\n     */\r\n    host: string;\r\n    \r\n    /**\r\n     * The port number of the email server.\r\n     */\r\n    port: number;\r\n    \r\n    /**\r\n     * A boolean indicating if the connection to the email server should use SSL/TLS.\r\n     */\r\n    secure: boolean;\r\n    \r\n    /**\r\n     * Authentication credentials for the email server.\r\n     */\r\n    auth: {\r\n      /**\r\n       * The username used for authenticating with the email server.\r\n       */\r\n      user: string;\r\n      \r\n      /**\r\n       * The password used for authenticating with the email server.\r\n       */\r\n      pass: string;\r\n    };\r\n    \r\n    /**\r\n     * The email address of the sender.\r\n     */\r\n    sender: string;\r\n  };\r\n\r\n  /**\r\n   * Configuration options for JSON Web Token (JWT) authentication.\r\n   */\r\n  jwt: {\r\n    /**\r\n     * The JWT configuration options.\r\n     */\r\n    jwt: JwtConfig;\r\n  };\r\n}\r\n\r\n/**\r\n * Interface representing the configuration options for authentication, specifically JSON Web Token (JWT) authentication.\r\n */\r\nexport interface AuthConfig {\r\n  /**\r\n   * The JWT configuration options.\r\n   */\r\n  jwt: JwtConfig;\r\n}\r\n\r\n/**\r\n * Interface representing the payload of a JSON Web Token (JWT).\r\n */\r\nexport interface TokenPayload {\r\n  /**\r\n   * The email associated with the token.\r\n   */\r\n  email: string;\r\n  \r\n  /**\r\n   * The subject of the token, typically representing the user's ID.\r\n   */\r\n  sub: number;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OAuthProfile.html":{"url":"interfaces/OAuthProfile.html","title":"interface - OAuthProfile","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  OAuthProfile\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Role } from \"@prisma/client\";\r\n\r\n// export interface User {\r\n//     id: number;\r\n//     email: string;\r\n//     password: string;\r\n//     roles: Role[];\r\n//     // Add any additional properties you expect in the user interface\r\n//   }\r\n\r\n  export interface OAuthProfile {\r\n    id: number; // The unique identifier provided by the OAuth provider (e.g., sub)\r\n\r\n    // Add other relevant fields from the OAuth provider's response as needed\r\n  }\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Permission.html":{"url":"interfaces/Permission.html","title":"interface - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Permission\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/interface/role.-permission.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing a Permission in the system.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The unique identifier of the permission.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The name of the permission.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface Role {\r\n  /**\r\n   * The name of the role.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * An array of permissions associated with the role.\r\n   *\r\n   * @property\r\n   * @type {string[]}\r\n   */\r\n  permissions: string[];\r\n}\r\n\r\n/**\r\n * Interface representing a Permission in the system.\r\n */\r\nexport interface Permission {\r\n  /**\r\n   * The unique identifier of the permission.\r\n   */\r\n  id: number;\r\n\r\n  /**\r\n   * The name of the permission.\r\n   */\r\n  name: string;\r\n\r\n  // Add any other properties related to permissions, if needed\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Role\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/rbac/interface/role.-permission.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing a role in the application with its associated permissions.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The name of the role.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    An array of permissions associated with the role.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface Role {\r\n  /**\r\n   * The name of the role.\r\n   *\r\n   * @property\r\n   * @type {string}\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * An array of permissions associated with the role.\r\n   *\r\n   * @property\r\n   * @type {string[]}\r\n   */\r\n  permissions: string[];\r\n}\r\n\r\n/**\r\n * Interface representing a Permission in the system.\r\n */\r\nexport interface Permission {\r\n  /**\r\n   * The unique identifier of the permission.\r\n   */\r\n  id: number;\r\n\r\n  /**\r\n   * The name of the permission.\r\n   */\r\n  name: string;\r\n\r\n  // Add any other properties related to permissions, if needed\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TokenPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing the payload of a JSON Web Token (JWT).\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The email associated with the token.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The subject of the token, typically representing the user's ID.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface JwtConfig {\r\n  /**\r\n   * The secret key used for signing and verifying JWT tokens.\r\n   */\r\n  secret: string;\r\n  \r\n  /**\r\n   * The expiration time for JWT tokens.\r\n   */\r\n  expiresIn: string;\r\n}\r\n\r\n/**\r\n * Interface representing the configuration options for authentication.\r\n */\r\nexport interface AuthConfigure {\r\n  // Other authentication-related configuration properties...\r\n\r\n  /**\r\n   * Configuration options for the \"Forgot Password\" functionality.\r\n   */\r\n  forgotPassword: {\r\n    /**\r\n     * The URL where users will be redirected to reset their password.\r\n     */\r\n    resetPasswordUrl: string;\r\n    \r\n    /**\r\n     * The expiration time (in milliseconds) for the reset token.\r\n     */\r\n    resetPasswordExpiration: number;\r\n    // Other configuration options as needed...\r\n  };\r\n\r\n  /**\r\n   * Configuration options for the email transporter used for sending emails.\r\n   */\r\n  emailTransporter: {\r\n    /**\r\n     * The hostname of the email server.\r\n     */\r\n    host: string;\r\n    \r\n    /**\r\n     * The port number of the email server.\r\n     */\r\n    port: number;\r\n    \r\n    /**\r\n     * A boolean indicating if the connection to the email server should use SSL/TLS.\r\n     */\r\n    secure: boolean;\r\n    \r\n    /**\r\n     * Authentication credentials for the email server.\r\n     */\r\n    auth: {\r\n      /**\r\n       * The username used for authenticating with the email server.\r\n       */\r\n      user: string;\r\n      \r\n      /**\r\n       * The password used for authenticating with the email server.\r\n       */\r\n      pass: string;\r\n    };\r\n    \r\n    /**\r\n     * The email address of the sender.\r\n     */\r\n    sender: string;\r\n  };\r\n\r\n  /**\r\n   * Configuration options for JSON Web Token (JWT) authentication.\r\n   */\r\n  jwt: {\r\n    /**\r\n     * The JWT configuration options.\r\n     */\r\n    jwt: JwtConfig;\r\n  };\r\n}\r\n\r\n/**\r\n * Interface representing the configuration options for authentication, specifically JSON Web Token (JWT) authentication.\r\n */\r\nexport interface AuthConfig {\r\n  /**\r\n   * The JWT configuration options.\r\n   */\r\n  jwt: JwtConfig;\r\n}\r\n\r\n/**\r\n * Interface representing the payload of a JSON Web Token (JWT).\r\n */\r\nexport interface TokenPayload {\r\n  /**\r\n   * The email associated with the token.\r\n   */\r\n  email: string;\r\n  \r\n  /**\r\n   * The subject of the token, typically representing the user's ID.\r\n   */\r\n  sub: number;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             Auth\n                        \n                    \n                    \n                        \n                            Auth:     \n    \n                        \n                    \n                    \n                        \n                            Auth decorator is used to set metadata for role-based access control (RBAC) in NestJS.It allows you to specify the required roles for accessing a particular route or handler.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userAuthSchema\n                        \n                    \n                    \n                        \n                            userAuthSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             forgotPasswordSchema\n                        \n                    \n                    \n                        \n                            forgotPasswordSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             resetPasswordSchema\n                        \n                    \n                    \n                        \n                            resetPasswordSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             Permissions\n                        \n                    \n                    \n                        \n                            Permissions:     \n    \n                        \n                    \n                    \n                        \n                            Custom NestJS metadata decorator for assigning permissions to a route handler or controller.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             Roles\n                        \n                    \n                    \n                        \n                            Roles:     \n    \n                        \n                    \n                    \n                        \n                            Custom NestJS metadata decorator for assigning roles to a route handler or controller.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roleSchema\n                        \n                    \n                    \n                        \n                            roleSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             permissionToRoleSchema\n                        \n                    \n                    \n                        \n                            permissionToRoleSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roleStatusSchema\n                        \n                    \n                    \n                        \n                            roleStatusSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             permissionSchema\n                        \n                    \n                    \n                        \n                            permissionSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roleIdSchema\n                        \n                    \n                    \n                        \n                            roleIdSchema:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    85%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/auth/common/zod-validation-pipe.ts\n            \n            \n                injectable\n            \n            \n                ZodValidationPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/auth/dto/user.dto.ts\n            \n            \n                classe\n            \n            \n                ForgotPasswordDto\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/auth/dto/user.dto.ts\n            \n            \n                classe\n            \n            \n                LoginDto\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/auth/dto/user.dto.ts\n            \n            \n                classe\n            \n            \n                ResetPasswordDto\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/auth/dto/user.dto.ts\n            \n            \n                classe\n            \n            \n                SignupDto\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/auth/guards/jwt.guard.ts\n            \n            \n                injectable\n            \n            \n                JwtAuthGuard\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/auth/interfaces/auth.interface.ts\n            \n            \n                interface\n            \n            \n                AuthConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/auth/interfaces/auth.interface.ts\n            \n            \n                interface\n            \n            \n                AuthConfigure\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/auth/interfaces/auth.interface.ts\n            \n            \n                interface\n            \n            \n                JwtConfig\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/auth/interfaces/auth.interface.ts\n            \n            \n                interface\n            \n            \n                TokenPayload\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/auth/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                OAuthProfile\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/auth/mailer/mail.service.ts\n            \n            \n                injectable\n            \n            \n                MailService\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/auth/middleware/auth.middleware.ts\n            \n            \n                injectable\n            \n            \n                AuthMiddleware\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/auth/prismaService/prisma.service.ts\n            \n            \n                injectable\n            \n            \n                PrismaService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/auth/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                SecureAuthService\n            \n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                src/auth/strategies/jwt.strategy.ts\n            \n            \n                injectable\n            \n            \n                JwtStrategy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/auth/strategies/oauth.strategy.ts\n            \n            \n                injectable\n            \n            \n                OAuthStrategy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/rbac/dto/permission-role.dto.ts\n            \n            \n                classe\n            \n            \n                AssignPermissionToRoleDto\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/rbac/dto/permission-role.dto.ts\n            \n            \n                classe\n            \n            \n                AssignRoleToUserDto\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/rbac/dto/permission-role.dto.ts\n            \n            \n                classe\n            \n            \n                PermissionDto\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/rbac/dto/permission-role.dto.ts\n            \n            \n                classe\n            \n            \n                RoleDto\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/rbac/dto/permission-role.dto.ts\n            \n            \n                classe\n            \n            \n                RoleIdDto\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/rbac/guard/rbac.guard.ts\n            \n            \n                injectable\n            \n            \n                RbacAuthGuard\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/rbac/interface/role.-permission.interface.ts\n            \n            \n                interface\n            \n            \n                Permission\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/rbac/interface/role.-permission.interface.ts\n            \n            \n                interface\n            \n            \n                Role\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/rbac/service/rbac.service.ts\n            \n            \n                injectable\n            \n            \n                SecureRbacService\n            \n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                src/user/dto/user.dto.ts\n            \n            \n                classe\n            \n            \n                CreateUserDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/user/dto/user.dto.ts\n            \n            \n                classe\n            \n            \n                UpdateUserDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/user/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                SecureUserService\n            \n            \n                100 %\n                (8/8)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
